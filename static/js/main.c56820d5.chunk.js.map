{"version":3,"sources":["serviceWorker.ts","common/NavbarButton.tsx","components/Navbar/Navbar.tsx","api/api.ts","redux/login-reducer.ts","common/FormBtn.tsx","components/auth/Login/LoginPage.tsx","redux/register-reducer.ts","common/InputField.tsx","common/FormWrapper.tsx","components/auth/Register/RegisterContainer.tsx","redux/passwordRecovery-reducer.ts","components/auth/PasswordRecovery/PasswordRecovery.tsx","redux/pssawordCreation-reducer.ts","components/auth/PasswordCreation/PasswordCreation.tsx","components/Profile/Profile.tsx","redux/packs-reducer.ts","common/Modal.tsx","common/RangeSlider.tsx","common/Pagination.tsx","common/Table.tsx","components/Main-content/Packs/Packs.tsx","components/WrongPage.tsx","redux/cards-reducer.ts","components/Main-content/Cards/Cards.tsx","components/Main-content/Learn/Learn.tsx","redux/app-reducer.ts","App.tsx","redux/redux-store.ts","index.tsx","components/Main-content/Learn/Learn.module.scss"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","theme","createStyles","btn","margin","spacing","color","borderColor","textDecoration","NavbarButton","link","name","classes","to","style","Button","variant","className","size","marginAutoItem","navbar","backgroundColor","Navbar","AppBar","position","Toolbar","Typography","Box","instance","axios","create","withCredentials","baseURL","mainContent","page","count","min","max","get","post","cardsPack","id","delete","put","_id","row","cardId","grade","card_id","question","answer","card","cardsPack_id","passwordRecovery","email","from","message","password","resetPasswordToken","authAPI","then","res","data","rememberMe","internalState","isAuth","userProfile","avatar","publicCardPacksCount","created","updated","isAdmin","verified","error","loginAC","type","submit","FormButton","disable","fullWidth","disabled","root","height","centr","paper","display","flexDirection","alignItems","palette","secondary","main","form","width","marginTop","LoginPage","useSelector","state","login","dispatch","useDispatch","formik","useFormik","initialValues","validate","values","test","onSubmit","setLoginTC","Grid","container","component","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","handleSubmit","noValidate","TextField","required","label","autoComplete","autoFocus","onChange","handleChange","value","FormControlLabel","control","Checkbox","Link","isRegistered","ValidationTextField","withStyles","borderWidth","borderLeftWidth","padding","input","marginBottom","InputField","helperText","FormWrapper","onsubmit","children","title","Container","maxWidth","e","preventDefault","RegisterContainer","register","loading","pwRecoveryRequest","success","a","console","log","errors","getFieldProps","initialState","setErrorAC","setSuccessAC","setLoadingAC","passwordRecoveryReducer","action","PasswordRecovery","validateOnBlur","validateOnChange","catch","response","errorObject","request","recoverPasswordTC","trim","pssawordCreationReducer","PasswordCreation","validationSchema","Yup","shape","changepassword","when","is","val","length","oneOf","token","useParams","status","setNewPasswordTC","passwordUpdate","confirm","Profile","s","profileBlock","profileHeader","onClick","info","cardPacks","pageCount","minCardsCount","maxCardsCount","cardPacksTotalCount","setRange","getPackOfCardsTC","getState","packsReducer","createMuiTheme","modal","justifyContent","background","border","boxShadow","shadows","button","alignContent","ModalWindow","isOpen","handleClose","onClose","Modal","aria-labelledby","aria-describedby","open","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","DialogActions","slider","marginRight","RangeSlider","minRange","maxRange","React","useState","setValue","Slider","step","event","newValue","valueLabelDisplay","pagination","Pagination","rowsPerPageOptions","onChangePage","rowsPerPage","onChangeRowsPerPage","TablePagination","newPage","target","table","minWidth","heading","fontWeight","TableData","Table","aria-label","TableHead","TableRow","map","elem","index","TableCell","key","align","TableBody","marginLeft","distance","Packs","memo","history","useHistory","localPage","setlocalPage","localRow","setlocalRow","newName","setNewName","currentPackName","setCurrentPackName","updatePackId","setUpdatePackId","isOpenAddPackModalPopup","setIsOpenAddPackModalPopup","isOpenModifyPackModalPopup","setIsOpenModifyPackModalPopup","isInitialized","app","userEmail","useEffect","onDeleteHandler","deletePackTC","handleModifyPackModalPopupOpen","cardPack","find","el","onUpdateHandler","randomColor","useCallback","Math","round","random","TableContainer","direction","justify","startIcon","scope","cardsCount","IconButton","push","fontSize","user_name","slice","WrongPage","cards","cardsTotalCount","maxGrade","minGrade","setCards","getCardsTC","cardsReducer","getNewPageTC","Cards","setQuestion","setAnswer","currentQuestion","setCurrentQuestion","currentAnswer","setCurrentAnswer","isOpenAddCardModalPopup","setIsOpenAddCardModalPopup","isOpenModifyCardModalPopup","setIsOpenModifyCardModalPopup","updateCardId","setUpdateCardId","showBtn","onAddNewPackHandler","addNewCardTC","handleModifyCardModalPopupOpen","updateCardTC","buttonControl","borderRadius","buttonGrade","transformStyle","grades","getCard","sum","reduce","acc","rand","i","newSum","Learn","props","isChecked","setIsChecked","isDisabled","setIsDisabled","isFlipped","setIsFlipped","first","setFirst","store","shots","rating","more_id","setCard","onGradeHandler","cards_wrapper","left","card_container","flipDirection","g","initializeAppAC","App","path","render","top","textAlign","CircularProgress","reducers","combineReducers","cardsPacks","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.c56820d5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport {Button, createStyles, Theme} from '@material-ui/core';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\tbtn: {\r\n\t\t\tmargin: theme.spacing(1),\r\n\t\t\tcolor: '#e4b61a',\r\n\t\t\tborderColor: '#e4b61a',\r\n\t\t\ttextDecoration:'none'\r\n\t\t},\r\n\t}),\r\n);\r\n\r\ntype PropsType = {\r\n\tlink: string,\r\n\tname: string\r\n}\r\n\r\nconst NavbarButton = ({link,name}:PropsType) => {\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<NavLink to={link} style={{textDecoration: 'none'}}>\r\n\t\t\t<Button variant='outlined' className={classes.btn}\r\n\t\t\t        size={'small'}>{name}</Button>\r\n\t\t</NavLink>\r\n\t);\r\n};\r\n\r\nexport default NavbarButton;\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n\tAppBar,\r\n\tBox,\r\n\tcreateStyles,\r\n\tTheme,\r\n\tToolbar,\r\n\tTypography\r\n} from '@material-ui/core';\r\nimport NavbarButton from '../../common/NavbarButton';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\tmarginAutoItem: {\r\n\t\t\tmargin: 'auto'\r\n\t\t},\r\n\t\tnavbar: {\r\n\t\t\tbackgroundColor: '#2c3258'\r\n\t\t},\r\n\t\tbtn: {\r\n\t\t\tmargin: theme.spacing(1),\r\n\t\t\tcolor: '#e4b61a',\r\n\t\t\tborderColor: '#e4b61a',\r\n\t\t\ttextDecoration:'none'\r\n\t\t},\r\n\t}),\r\n);\r\n\r\nconst Navbar = () => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<AppBar position=\"static\" className={classes.navbar}>\r\n\t\t\t<Toolbar>\r\n\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\tCards\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Box className={classes.marginAutoItem}>\r\n\t\t\t\t\t<NavbarButton link={'/profile'} name={'Profile'}/>\r\n\t\t\t\t\t<NavbarButton link={'/login'} name={'login'}/>\r\n\t\t\t\t\t<NavbarButton link={'/register'} name={'register'}/>\r\n\t\t\t\t\t<NavbarButton link={'/passwordRecovery'} name={'Recovery'}/>\r\n\t\t\t\t\t<NavbarButton link={'/set-new-password'} name={'New password'}/>\r\n\t\t\t\t\t<NavbarButton link={'/packs'} name={'Packs of cards'}/>\r\n\t\t\t\t\t<NavbarButton link={'/сards'} name={'Сards'}/>\r\n\t\t\t\t\t<NavbarButton link={'/learn'} name={'Learn'}/>\r\n\t\t\t\t</Box>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\r\n\t);\r\n};\r\nexport default Navbar;\r\n\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n});\r\n\r\nexport const mainContent = {\r\n  getPacksOfCards(page: number, count: number, min: number, max: number) {\r\n    return instance.get(`cards/pack?page=${page}&pageCount=${count}&min=${min}&max=${max}`);\r\n  },\r\n  getRangedCards(page: number, count: number, min: number, max: number) {\r\n\r\n    return instance.get(`cards/pack?page=${page}&pageCount=${count}&min=${min}&max=${max}`);\r\n  },\r\n  addNewPack(name: string) {\r\n    return instance.post(`cards/pack`, {\r\n      cardsPack: {\r\n        name: name\r\n      }\r\n    });\r\n  },\r\n  deletePack(id: string) {\r\n    return instance.delete(`cards/pack?id=${id}`);\r\n  },\r\n  updatePack(id: string, name: string) {\r\n    return instance.put(\r\n      `cards/pack`,\r\n      {\r\n        cardsPack: {\r\n          _id: id,\r\n          name: name\r\n        }\r\n      });\r\n  },\r\n  getCards(id: string, page: number, row: number) {\r\n    return instance.get(`cards/card?cardsPack_id=${id}&page=${page}&pageCount=${row}`);\r\n  },\r\n  sendCardGrade(cardId: string, grade: number) {\r\n    return instance.put(`cards/grade`, {grade: grade, card_id: cardId});\r\n  },\r\n  addNewCard(id: string, question: string, answer: string) {\r\n    return instance.post(`cards/card`, {\r\n      card: {\r\n        cardsPack_id: id,\r\n        question,\r\n        answer\r\n      }\r\n    });\r\n  },\r\n  deleteCard(id: string) {\r\n    return instance.delete(`cards/card?id=${id}`);\r\n  },\r\n  updateCard(id: string, question: string, answer: string) {\r\n    return instance.put(\r\n      `cards/card`,\r\n      {\r\n        card: {\r\n          _id: id,\r\n          question,\r\n          answer\r\n        }\r\n      });\r\n  },\r\n};\r\n\r\nexport const passwordRecovery = {\r\n  getToken(email: string) {\r\n    let promise = instance.post(`auth/forgot/`, {\r\n      email,\r\n      from: 'password-reset-server <noreply@noreply.it>',\r\n      message: `\r\n\t\t\t\t\t<div style=\"background-color: lime; padding: 15px\">\r\n\t\t\t\t\tpassword recovery link: \r\n\t\t\t\t\t<a href='http://localhost:3000/#/set-new-password/$token$'>link</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t`\r\n    });\r\n    return promise;\r\n  },\r\n  newPassword(password: string, resetPasswordToken: string) {\r\n    return instance.post(`auth/set-new-password`, {password, resetPasswordToken});\r\n  }\r\n};\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId: string) {\r\n    return instance.get(`profile/` + userId);\r\n  },\r\n  getStatus(userId: string) {\r\n    return instance.get(`profile/status/` + userId);\r\n  },\r\n  updateStatus(status: string) {\r\n    return instance.put(`profile/status`, {status: status});\r\n  }\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.post<UsersDataType>(`auth/me`).then((res) => {\r\n      return res.data;\r\n    });\r\n  },\r\n  login(email: string, password: string, rememberMe = false) {\r\n    return instance.post(`auth/login`, {email, password, rememberMe});\r\n\r\n  },\r\n  logout() {\r\n    return instance.delete(`auth/me`);\r\n  },\r\n  register(data: RegisterDataType) {\r\n\r\n    return instance.post(`auth/register`, {...data});\r\n  }\r\n};\r\n\r\ntype RegisterDataType = {\r\n  email: string,\r\n  password: string\r\n}\r\nexport type UsersDataType = {\r\n  _id: string;\r\n  email: string | undefined;\r\n  name: string;\r\n  avatar?: string;\r\n  publicCardPacksCount: number; // количество колод\r\n  created: any;\r\n  updated: any;\r\n  isAdmin: boolean;\r\n  verified: boolean; // подтвердил ли почту\r\n  rememberMe: boolean;\r\n  error: string;\r\n}\r\n\r\nexport type CardDataType = {\r\n  cards: Array<CardsType>,\r\n  cardsTotalCount?: number,\r\n  maxGrade?: number,\r\n  minGrade?: number,\r\n  page?: number,\r\n  pageCount?: number\r\n}\r\nexport type CardsType = {\r\n  answer: string,\r\n  question: string,\r\n  cardsPack_id: string,\r\n  grade: number,\r\n  rating: number,\r\n  shots: number,\r\n  type: string,\r\n  created: string,\r\n  updated: string,\r\n  __v: number,\r\n  _id: string,\r\n}","import {Dispatch} from 'redux';\r\nimport {authAPI, UsersDataType} from '../api/api';\r\n\r\nexport type LoginReducerType = {\r\n  isAuth?: boolean,\r\n  userProfile: UsersDataType\r\n};\r\n\r\nlet internalState: LoginReducerType = {\r\n  isAuth: false,\r\n  userProfile: {\r\n    _id: '',\r\n    email: '',\r\n    name: '',\r\n    avatar: '',\r\n    publicCardPacksCount: 0,\r\n    created: 'YYYY-MM-DD',\r\n    updated: 'YYYY-MM-DD',\r\n    isAdmin: false,\r\n    verified: false,\r\n    rememberMe: false,\r\n    error: '',\r\n  }\r\n};\r\ndebugger\r\n export const loginReducer = (state: LoginReducerType = internalState, action: ActionTypes): LoginReducerType => {\r\n\r\n  switch (action.type) {\r\n    case 'login/SET_USER_DATA':\r\n      return {\r\n        ...state,\r\n        userProfile: action.data,\r\n        isAuth: true\r\n      };\r\n    case 'login/LOGOUT':\r\n      return {\r\n        ...state,\r\n        isAuth: false\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const loginAC = (data: UsersDataType) => ({\r\n  type: 'login/SET_USER_DATA',\r\n  data\r\n} as const);\r\n\r\nconst logoutAC = () => ({\r\n  type: 'login/LOGOUT',\r\n} as const);\r\n\r\ntype ActionTypes =\r\n  | ReturnType<typeof loginAC>\r\n  | ReturnType<typeof logoutAC>;\r\n\r\nexport const setLoginTC = (email: string, password: string, rememberMe: boolean = false) => (dispatch: Dispatch<ActionTypes>) => {\r\n  authAPI.login(email, password, rememberMe)\r\n    .then(res => {\r\n        dispatch(loginAC(res.data))\r\n      }\r\n    )\r\n};\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n  authAPI.logout()\r\n    .then(res => {\r\n      if (res.data.info === 'logOut success —ฅ/ᐠ.̫ .ᐟ\\\\ฅ—') {\r\n        dispatch(logoutAC())\r\n      }\r\n    })\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tsubmit: {\r\n\t\tmargin: theme.spacing(3, 0, 2),\r\n\t\tbackgroundColor: '#e4b61a',\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: '#2c3258'\r\n\t\t}\r\n\t},\r\n}));\r\n\r\n\r\ntype PropsType = {\r\n\tdisable?: boolean\r\n\tname: string\r\n}\r\n\r\nconst FormButton = ({disable,name}:PropsType) => {\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Button\r\n\t\t\ttype=\"submit\"\r\n\t\t\tfullWidth\r\n\t\t\tvariant=\"contained\"\r\n\t\t\tcolor=\"primary\"\r\n\t\t\tclassName={classes.submit}\r\n\t\t\tdisabled={disable}\r\n\t\t>\r\n\t\t\t{name}\r\n\t\t</Button>\r\n\t);\r\n};\r\n\r\nexport default FormButton;\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useFormik} from 'formik';\r\nimport {setLoginTC} from '../../../redux/login-reducer';\r\nimport {AppRootStateType} from '../../../redux/redux-store';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport FormButton from '../../../common/FormBtn';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n\r\n  },\r\n  centr: {\r\n    margin: '0 auto'\r\n  },\r\n\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport function LoginPage() {\r\n\r\n  const isAuth = useSelector<AppRootStateType, boolean | undefined>(state => state.login.isAuth)\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch()\r\n\r\n  const formik: any = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      rememberMe: false\r\n    },\r\n    validate: (values) => {\r\n      if (!values.email) {\r\n        return {\r\n          email: 'Email is required'\r\n        };\r\n      }\r\n      else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        return {\r\n          email: 'Invalid email address'\r\n        };\r\n      }\r\n    },\r\n    onSubmit: values => {\r\n      const {email, password, rememberMe} = values\r\n      dispatch(setLoginTC(email, password, rememberMe))\r\n      // console.log(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n\r\n  if (isAuth) {\r\n    return <Redirect to={'/profile'}/>\r\n  }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline/>\r\n      {/*<Grid item xs={false} sm={4} md={7} className={classes.image} />*/}\r\n      <Grid item xs={12} sm={8} md={5} className={classes.centr} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon/>\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Login\r\n          </Typography>\r\n          <form onSubmit={formik.handleSubmit}\r\n                className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={formik.handleChange}\r\n              value={formik.values.email}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              // autoComplete=\"current-password\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.password}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox id=\"rememberMe\"\r\n                                 name=\"rememberMe\"\r\n                                 onChange={formik.handleChange}\r\n                                 value={formik.values.rememberMe} color=\"primary\"/>}\r\n              label=\"Remember me\"\r\n            />\r\n            <FormButton name={'Log in'}/>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <NavLink to='/passwordRecovery'>\r\n                  <Link\r\n\r\n                    variant=\"body2\">\r\n                    Forgot password?\r\n                  </Link>\r\n                </NavLink>\r\n\r\n              </Grid>\r\n              <Grid item>\r\n                <NavLink to='/register'>\r\n                  <Link\r\n                    variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </NavLink>\r\n\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../api/api\";\r\n\r\n\r\nlet internalState: RegisterReducerType = {\r\n  isRegistered: false\r\n};\r\n\r\nexport const registerReducer = (state: RegisterReducerType = internalState, action: ActionsType) => {\r\n\r\n  switch (action.type) {\r\n    case \"register/SET-IS-REGISTERED\":\r\n\r\n      return {...state, isRegistered: action.value}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst setRegisterAC = (value: boolean) => ({\r\n  type: 'register/SET-IS-REGISTERED', value\r\n})\r\n\r\nexport const RegisterTC = (data: RegisterParamsType) => async (dispatch: Dispatch<ActionsType>) => {\r\n  try {\r\n    let response = await authAPI.register(data)\r\n    dispatch(setRegisterAC(true))\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n}\r\n\r\n//types\r\ntype RegisterReducerType = {\r\n  isRegistered: boolean\r\n};\r\ntype ActionsType = ReturnType<typeof setRegisterAC>\r\ntype ThunkDispatch = Dispatch<ActionsType>\r\n\r\ntype RegisterParamsType = {\r\n  email: string\r\n  password: string\r\n}","import React from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst ValidationTextField = withStyles({\r\n    root: {\r\n        '& input:valid + fieldset': {\r\n            borderColor: 'green',\r\n            borderWidth: 2,\r\n        },\r\n        '& input:valid:focus + fieldset': {\r\n            borderLeftWidth: 6,\r\n            padding: '4px !important',\r\n        },\r\n    },\r\n})(TextField);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n        marginBottom: '10px'\r\n    }\r\n}));\r\n\r\ntype PropsType = {\r\n    error?: boolean | string\r\n    formik?: any\r\n    type?: string\r\n    label?: string\r\n    value?: string\r\n    onChange?: any\r\n}\r\n\r\nconst InputField = ({error = false, formik, type, label, value, onChange}: PropsType) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <ValidationTextField className={classes.input}\r\n                             error={error}\r\n                             helperText={error}\r\n                             label={label}\r\n                             fullWidth\r\n                             required\r\n                             variant=\"outlined\"\r\n                             type={type}\r\n                             {...formik}\r\n\r\n        />\r\n    );\r\n};\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#2c3258',\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n    },\r\n}));\r\n\r\ntype PropsType = {\r\n    onsubmit: any\r\n    title: string\r\n    children: any\r\n}\r\n\r\nconst FormWrapper = ({onsubmit, children, title}: PropsType) => {\r\n\r\n    function onSubmit(e: any) {\r\n        e.preventDefault()\r\n        onsubmit()\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOpenIcon/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    {title}\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={onSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            {children}\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default FormWrapper;\r\n","import React from 'react';\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, FormControl, FormGroup, FormLabel, Grid, TextField} from \"@material-ui/core\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {RegisterTC} from \"../../../redux/register-reducer\";\r\nimport {AppRootStateType} from \"../../../redux/redux-store\";\r\nimport InputField from \"../../../common/InputField\";\r\nimport FormButton from \"../../../common/FormBtn\";\r\nimport FormWrapper from \"../../../common/FormWrapper\";\r\nimport * as Yup from \"yup\";\r\n\r\nexport const RegisterContainer = () => {\r\n    const dispatch = useDispatch()\r\n    const isRegistered = useSelector<AppRootStateType, boolean>(state => state.register.isRegistered)\r\n\r\n    const loading = useSelector<AppRootStateType, boolean>(state => state.pwRecoveryRequest.loading);\r\n    const error = useSelector<AppRootStateType, string>(state => state.pwRecoveryRequest.error);\r\n    const success = useSelector<AppRootStateType, boolean>(state => state.pwRecoveryRequest.success);\r\n\r\n\r\n    const formik = useFormik({\r\n        validate: (values) => {\r\n            if (!values.email) {\r\n                return {\r\n                    email: 'Email is required'\r\n                };\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                return {\r\n                    email: 'Invalid email address'\r\n                };\r\n            }\r\n        },\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(RegisterTC(values))\r\n        }\r\n    })\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <FormWrapper onsubmit={formik.handleSubmit} title={'Register'}>\r\n            {formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n            {error ? <div>{error}</div> : null}\r\n            <InputField error={!!formik.errors.email} formik={{...formik.getFieldProps('email')}}\r\n                        type={'email'} label={'Enter your email'}/>\r\n            <InputField error={!!formik.errors.password} formik={{...formik.getFieldProps('password')}}\r\n                        type={'password'} label={'Enter your password'}/>\r\n            <FormButton name={'Send'} disable={loading}/>\r\n        </FormWrapper>\r\n    )\r\n}\r\n\r\n","import {passwordRecovery} from '../api/api';\r\nimport {Dispatch} from 'redux';\r\n\r\nexport type PasswordRecoveryReducerType = {\r\n\terror: string\r\n\tsuccess: boolean\r\n\tloading: boolean\r\n};\r\n\r\nlet initialState: PasswordRecoveryReducerType = {\r\n\terror: '',\r\n\tsuccess: false,\r\n\tloading: false\r\n};\r\n\r\nconst passwordRecoveryReducer = (state: PasswordRecoveryReducerType = initialState,\r\n\taction: ActionTypes) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'pwRecovery/SET_ERROR':\r\n\t\t\treturn {\r\n\t\t\t\t...state, error: action.error\r\n\t\t\t};\r\n\t\tcase 'pwRecovery/SET_SUCCESS':\r\n\t\t\treturn {\r\n\t\t\t\t...state, success: action.success\r\n\t\t\t};\r\n\t\tcase 'pwRecovery/SET_LOADING':\r\n\t\t\treturn {\r\n\t\t\t\t...state, loading: action.loading\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const setErrorAC = (error: string) => ({\r\n\ttype: 'pwRecovery/SET_ERROR',\r\n\terror\r\n} as const);\r\n\r\nexport const setSuccessAC = (success: boolean) => ({\r\n\ttype: 'pwRecovery/SET_SUCCESS',\r\n\tsuccess\r\n} as const);\r\nexport const setLoadingAC = (loading: boolean) => ({\r\n\ttype: 'pwRecovery/SET_LOADING',\r\n\tloading\r\n} as const);\r\n\r\ntype ActionTypes = ReturnType<typeof setErrorAC> | ReturnType<typeof setSuccessAC> | ReturnType<typeof setLoadingAC>\r\n\r\nexport const recoverPasswordTC = (email: string) => (dispatch: Dispatch<ActionTypes>) => {\r\n\tdispatch(setLoadingAC(true))\r\n\tpasswordRecovery.getToken(email).then(\r\n\t\tres => {\r\n\t\t\tdispatch(setSuccessAC(res.data.success));\r\n\t\t\tdispatch(setErrorAC(''));\r\n\t\t\tdispatch(setLoadingAC(false))\r\n\t\t}\r\n\t).catch(error => {\r\n\t\tconst {response} = error;\r\n\t\tconst {request, ...errorObject} = response;\r\n\t\tdispatch(setSuccessAC(false));\r\n\t\tdispatch(setLoadingAC(false))\r\n\t\treturn dispatch(setErrorAC(errorObject.data.error));\r\n\t});\r\n};\r\n\r\nexport default passwordRecoveryReducer;","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../redux/redux-store';\r\nimport {recoverPasswordTC} from '../../../redux/passwordRecovery-reducer';\r\nimport {useFormik} from 'formik';\r\nimport InputField from '../../../common/InputField';\r\nimport FormButton from '../../../common/FormBtn';\r\nimport FormWrapper from '../../../common/FormWrapper';\r\n\r\nexport const PasswordRecovery = () => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst formik = useFormik({\r\n\t\tvalidateOnBlur: true,\r\n\t\tvalidateOnChange: false,\r\n\t\tvalidate: (values) => {\r\n\t\t\tif (!values.email) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\temail: 'Email is required'\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\temail: 'Invalid email address'\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\tinitialValues: {\r\n\t\t\temail: ''\r\n\t\t},\r\n\t\tonSubmit: values => {\r\n\t\t\tconst {email} = values;\r\n\t\t\tdispatch(recoverPasswordTC(email.trim()));\r\n\t\t},\r\n\t});\r\n\r\n\tconst error = useSelector<AppRootStateType, string>(state => state.pwRecoveryRequest.error);\r\n\tconst success = useSelector<AppRootStateType, boolean>(state => state.pwRecoveryRequest.success);\r\n\tconst loading = useSelector<AppRootStateType, boolean>(state => state.pwRecoveryRequest.loading);\r\n\r\n\treturn (\r\n\t\t<FormWrapper onsubmit={formik.handleSubmit} title={'Reset password'}>\r\n\t\t\t{formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n\t\t\t{error ? <div>{error}</div> : null}\r\n\t\t\t<InputField error={!!formik.errors.email} formik={{...formik.getFieldProps('email')}}\r\n\t\t\t            type={'email'} label={'Enter your email'}/>\r\n\t\t\t<FormButton name={'Send'} disable={loading}/>\r\n\t\t</FormWrapper>\r\n\t);\r\n};\r\n\r\n","import {Dispatch} from 'redux';\r\nimport {passwordRecovery} from '../api/api';\r\n\r\nexport type PssawordCreationReducerType = {\r\n\terror: string\r\n\tsuccess: boolean\r\n\tloading: boolean\r\n};\r\n\r\nlet initialState: PssawordCreationReducerType = {\r\n\terror: '',\r\n\tsuccess: false,\r\n\tloading: false,\r\n};\r\n\r\nconst pssawordCreationReducer = (state: PssawordCreationReducerType = initialState,\r\n\taction: ActionTypes) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'pwCreation/SET_SUCCESS':\r\n\t\t\treturn {\r\n\t\t\t\t...state, success: action.success\r\n\t\t\t};\r\n\t\tcase 'pwCreation/SET_LOADING':\r\n\t\t\treturn {\r\n\t\t\t\t...state, loading: action.loading\r\n\t\t\t};\r\n\t\tcase 'pwCreation/SET_ERROR':\r\n\t\t\treturn {\r\n\t\t\t\t...state, error: action.error\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst setSuccessAC = (success: boolean) => ({\r\n\ttype: 'pwCreation/SET_SUCCESS',\r\n\tsuccess\r\n} as const);\r\nconst setLoadingAC = (loading: boolean) => ({\r\n\ttype: 'pwCreation/SET_LOADING',\r\n\tloading\r\n} as const);\r\nexport const setErrorAC = (error: string) => ({\r\n\ttype: 'pwCreation/SET_ERROR',\r\n\terror\r\n} as const);\r\n\r\ntype ActionTypes =\r\n\tReturnType<typeof setErrorAC>\r\n\t| ReturnType<typeof setSuccessAC>\r\n\t| ReturnType<typeof setLoadingAC>\r\n\r\nexport const setNewPasswordTC = (password: string,\r\n\ttoken: string) => (dispatch: Dispatch<ActionTypes>) => {\r\n\tdispatch(setLoadingAC(true));\r\n\tpasswordRecovery.newPassword(password, token).then(\r\n\t\tres => {\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tdispatch(setSuccessAC(true));\r\n\t\t\t\tdispatch(setErrorAC(''));\r\n\t\t\t\tdispatch(setLoadingAC(false));\r\n\t\t\t}\r\n\t\t}\r\n\t).catch(error => {\r\n\t\tconst {response} = error;\r\n\t\tconst {request, ...errorObject} = response;\r\n\t\tdispatch(setSuccessAC(false));\r\n\t\tdispatch(setLoadingAC(false));\r\n\t\treturn dispatch(setErrorAC(errorObject.data.error));\r\n\t});\r\n};\r\n\r\nexport default pssawordCreationReducer;","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../redux/redux-store';\r\nimport * as Yup from 'yup';\r\nimport {useFormik} from 'formik';\r\nimport {setNewPasswordTC} from '../../../redux/pssawordCreation-reducer';\r\nimport {useParams, Redirect} from 'react-router-dom';\r\nimport InputField from '../../../common/InputField';\r\nimport FormButton from '../../../common/FormBtn';\r\nimport FormWrapper from '../../../common/FormWrapper';\r\n\r\nexport const PasswordCreation = () => {\r\n\r\n\tconst validationSchema = Yup.object().shape({\r\n\t\tpassword: Yup.string().required('This field is required'),\r\n\t\tchangepassword: Yup.string().when('password', {\r\n\t\t\tis: val => (val && val.length > 0 ? true : false),\r\n\t\t\tthen: Yup.string().oneOf(\r\n\t\t\t\t[Yup.ref('password')],\r\n\t\t\t\t'Both password need to be the same'\r\n\t\t\t)\r\n\t\t})\r\n\t});\r\n\r\n\tconst {token} = useParams();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst formik = useFormik({\r\n\t\tvalidateOnBlur: true,\r\n\t\tvalidateOnChange: false,\r\n\t\tinitialValues: {\r\n\t\t\tpassword: '',\r\n\t\t\tchangepassword: ''\r\n\t\t},\r\n\t\tvalidationSchema,\r\n\t\tonSubmit: values => {\r\n\t\t\tconst {password} = values;\r\n\t\t\tdispatch(setNewPasswordTC(password, token));\r\n\t\t}\r\n\t});\r\n\r\n\tconst error = useSelector<AppRootStateType, string>(state => state.passwordUpdate.error);\r\n\tconst success = useSelector<AppRootStateType, boolean>(state => state.passwordUpdate.success);\r\n\tconst loading = useSelector<AppRootStateType, boolean>(state => state.passwordUpdate.loading);\r\n\r\n\tif (success) {\r\n\t\twindow.confirm('Your password has been changed!');\r\n\t\treturn <Redirect to={'/login'}/>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<FormWrapper onsubmit={formik.handleSubmit} title={'Set new password'}>\r\n\t\t\t{formik.errors.password ? <div>{formik.errors.password}</div> : null}\r\n\t\t\t{error ? <div>{error}</div> : null}\r\n\t\t\t<InputField error={!!formik.errors.password}\r\n\t\t\t            formik={{...formik.getFieldProps('password')}}\r\n\t\t\t            type={'password'} label={'Enter new password'}/>\r\n\t\t\t{formik.errors.changepassword ? <div>{formik.errors.changepassword}</div> : null}\r\n\t\t\t<InputField error={!!formik.errors.changepassword}\r\n\t\t\t            formik={{...formik.getFieldProps('changepassword')}}\r\n\t\t\t            type={'password'} label={'Confirm new password'}/>\r\n\t\t\t<FormButton name={'Send'} disable={loading}/>\r\n\t\t</FormWrapper>\r\n\r\n\t);\r\n};\r\n\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../redux/redux-store\";\r\nimport {logoutTC} from \"../../redux/login-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \"./Profile.module.css\";\r\nimport {UsersDataType} from '../../api/api';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: '#e4b61a',\r\n    '&:hover': {\r\n      backgroundColor: '#2c3258'\r\n    }\r\n  },\r\n}));\r\n\r\nexport const Profile = () => {\r\n\r\n  const isAuth = useSelector<AppRootStateType, boolean | undefined>(state => state.login.isAuth);\r\n  const userProfile = useSelector<AppRootStateType, UsersDataType>(state => state.login.userProfile);\r\n\r\n  const {email, name, avatar, publicCardPacksCount, created} = userProfile;\r\n\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles();\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to={'/login'}/>\r\n  }\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logoutTC())\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={s.profileBlock}>\r\n      <div className={s.profileHeader}>\r\n        <div className={'container'}>\r\n          <div>Profile {name}</div>\r\n          <div>Profile email {email}</div>\r\n          <div>Profile avatar {avatar}</div>\r\n          <div>Profile publicCardPacksCount {publicCardPacksCount}</div>\r\n          <div>Profile created {created}</div>\r\n\r\n          <button type=\"submit\" onClick={logoutHandler} className={classes.submit}>Log out</button>\r\n        </div>\r\n        )\r\n      </div>\r\n    </div>\r\n  )\r\n}","import {Dispatch} from 'redux';\r\nimport {mainContent} from '../api/api';\r\nimport {AppRootStateType} from './redux-store';\r\n\r\nexport type PacksReducerType = {\r\n\tcardPacks: PackType[] | [],\r\n\tpage: number,\r\n\tpageCount: number\r\n\tcardPacksTotalCount: number\r\n\tminCardsCount: number\r\n\tmaxCardsCount: number\r\n};\r\n\r\nexport type PackType = {\r\n\tcardsCount: number\r\n\tcreated: string\r\n\tgrade: number\r\n\tmore_id: string\r\n\tname: string\r\n\tpath: string\r\n\tprivate: boolean\r\n\trating: number\r\n\tshots: number\r\n\ttype: string\r\n\tupdated: string\r\n\tuser_id: string\r\n\tuser_name: string\r\n\t__v: number\r\n\t_id: string\r\n}\r\n\r\nlet initialState: PacksReducerType = {\r\n\tcardPacks: [],\r\n\tpage: 0,\r\n\tpageCount: 10,\r\n\tminCardsCount: 0,\r\n\tmaxCardsCount: 20,\r\n\tcardPacksTotalCount: 1\r\n\r\n};\r\n\r\nexport const packsReducer = (state: PacksReducerType = initialState,\r\n\taction: ActionTypes) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'packs/SET_PACKS':\r\n\t\t\treturn {\r\n\t\t\t\t...state, cardPacks: action.cardsPacks,\r\n\t\t\t\tpage: action.page,\r\n\t\t\t\tpageCount: action.pageCount,\r\n\t\t\t\tcardPacksTotalCount: action.cardPacksTotalCount,\r\n\t\t\t\tminCardsCount: action.minCardsCount,\r\n\t\t\t\tmaxCardsCount: action.maxCardsCount\r\n\t\t\t};\r\n\t\tcase 'packs/SET_PAGE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpage: action.page,\r\n\t\t\t\tpageCount: action.pageCount\r\n\r\n\t\t\t};\r\n\t\tcase 'packs/SET_RANGE':\r\n\t\t\treturn {\r\n\t\t\t\t...state, cardPacks: action.cardPacks,\r\n\t\t\t\tpage: action.page,\r\n\t\t\t\tpageCount: action.pageCount,\r\n\t\t\t\tcardPacksTotalCount: action.cardPacksTotalCount,\r\n\t\t\t\tminCardsCount: action.minCardsCount,\r\n\t\t\t\tmaxCardsCount: action.maxCardsCount,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const setPackOfCards = (cardsPacks: PackType[], page:number,\r\n\tpageCount:number, cardPacksTotalCount: number, minCardsCount: number,\r\n\tmaxCardsCount:number ) => ({\r\n\ttype: 'packs/SET_PACKS',\r\n\tcardsPacks,\r\n\tpage,\r\n\tpageCount,\r\n\tcardPacksTotalCount,\r\n\tminCardsCount,\r\n\tmaxCardsCount\r\n} as const);\r\n\r\nexport const setPage = (page: number, pageCount: number) => ({\r\n\ttype: 'packs/SET_PAGE',\r\n\tpage,\r\n\tpageCount\r\n} as const);\r\n\r\nexport const setRange = (data: any,min:number,max:number) => ({\r\n\ttype: 'packs/SET_RANGE',\r\n\tcardPacks: data.cardPacks,\r\n\tpage: data.page,\r\n\tpageCount: data.pageCount,\r\n\tcardPacksTotalCount: data.cardPacksTotalCount,\r\n\tminCardsCount: min,\r\n\tmaxCardsCount: max,\r\n} as const);\r\n\r\ntype ActionTypes =\r\n\tReturnType<typeof setPackOfCards>\r\n\t| ReturnType<typeof setPage>\r\n\t| ReturnType<typeof setRange>\r\n\r\nexport const getPackOfCardsTC = (page: number, row: number) => (dispatch: Dispatch<ActionTypes>,\r\n\tgetState: () => AppRootStateType) => {\r\n\tconst {minCardsCount, maxCardsCount} = getState().packsReducer\r\n\tmainContent.getPacksOfCards(page, row, minCardsCount, maxCardsCount).then(\r\n\t\tres => {\r\n\t\t\tdispatch(setRange(res.data, minCardsCount, maxCardsCount));\r\n\t\t}\r\n\t).catch(error => {\r\n\t\tconsole.log(error.response.data.error)\r\n\t});\r\n};\r\n\r\nexport const changeRange = (min: number, max: number) => (dispatch: Dispatch<ActionTypes>,\r\n\tgetState: () => AppRootStateType) => {\r\n\tconst {page, pageCount} = getState().packsReducer\r\n\tmainContent.getRangedCards(page, pageCount, min, max).then(\r\n\tres => {\r\n\t\tdispatch(setRange(res.data,min,max));\r\n\t}\r\n\t).catch(error => {\r\n\t\tconsole.log(error.response.data.error)\r\n\r\n\t});\r\n};\r\n\r\nexport const addNewPackTC = (name: string) => (dispatch: Dispatch<any>, getState: () => AppRootStateType) => {\r\n\tconst {page, pageCount} = getState().packsReducer\r\n\tmainContent.addNewPack(name).then(\r\n\t\tres => {\r\n\t\t\tdispatch(getPackOfCardsTC(page, pageCount));\r\n\t\t}\r\n\t).catch(error => {\r\n\t\tconsole.log(error.response.data.error)\r\n\t});\r\n};\r\nexport const deletePackTC = (id: string) => (dispatch: Dispatch<any>, getState: () => AppRootStateType) => {\r\n\tconst {page, pageCount} = getState().packsReducer\r\n\tmainContent.deletePack(id).then(\r\n\t\tres => {\r\n\t\t\tdispatch(getPackOfCardsTC(page, pageCount));\r\n\t\t}\r\n\t).catch(error => {\r\n\t\tconsole.log(error.response.data.error)\r\n\t});\r\n};\r\n\r\nexport const updatePackTC = (id: string, name: string) => (dispatch: Dispatch<any>,\r\n\tgetState: () => AppRootStateType) => {\r\n\tconst {page, pageCount} = getState().packsReducer\r\n\tmainContent.updatePack(id, name).then(\r\n\t\tres => {\r\n\t\t\tdispatch(getPackOfCardsTC(page, pageCount));\r\n\t\t}\r\n\t).catch(error => {\r\n\t\tconsole.log(error.response.data.error)\r\n\t});\r\n};\r\n","import React from 'react';\r\nimport {makeStyles, Theme, createStyles, createMuiTheme} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {Button, DialogActions, Typography} from '@material-ui/core';\r\n\r\nconst theme = createMuiTheme();\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\tmodal: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t},\r\n\t\tpaper: {\r\n\t\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\t\tborder: '2px solid #000',\r\n\t\t\tboxShadow: theme.shadows[5],\r\n\t\t\tpadding: theme.spacing(2, 4, 3),\r\n\t\t},\r\n\t\tbutton: {\r\n\t\t\twidth: '250px',\r\n\t\t\talignContent: 'center',\r\n\r\n\t\t},\r\n\t}),\r\n);\r\n\r\ntype PropsType = {\r\n\tisOpen: boolean\r\n\thandleClose: () => void\r\n\ttitle?: string\r\n\tchildren?: any\r\n}\r\n\r\nexport default function ModalWindow({isOpen,handleClose,title,children}:PropsType) {\r\n\tconst classes = useStyles();\r\n\r\n\tfunction onClose() {\r\n\t\thandleClose()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Modal\r\n\t\t\t\taria-labelledby=\"transition-modal-title\"\r\n\t\t\t\taria-describedby=\"transition-modal-description\"\r\n\t\t\t\tclassName={classes.modal}\r\n\t\t\t\topen={isOpen}\r\n\t\t\t\tonClose={onClose}\r\n\t\t\t\tcloseAfterTransition\r\n\t\t\t\tBackdropComponent={Backdrop}\r\n\t\t\t\tBackdropProps={{\r\n\t\t\t\t\ttimeout: 500,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Fade in={isOpen}>\r\n\t\t\t\t\t<div className={classes.paper}>\r\n\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t<Button onClick={() => onClose()} color='primary'>Close</Button>\r\n\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t\t<Typography style={{padding: theme.spacing(2)}} component=\"h3\"\r\n\t\t\t\t\t\t            variant=\"h3\">\r\n\t\t\t\t\t\t\t{title}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t{children}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Fade>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { changeRange } from '../redux/packs-reducer';\r\nimport {useDispatch} from 'react-redux';\r\nimport FormButton from './FormBtn';\r\nimport {Button} from '@material-ui/core';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\twidth: '80%',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\talignItems: 'center'\r\n\t},\r\n\tbutton: {\r\n\t\twidth: '100px',\r\n\t\talignContent: 'center',\r\n\t},\r\n\tslider: {\r\n\t\tmarginRight: '30px'\r\n\t}\r\n});\r\n\r\ntype PropsType = {\r\n\tminRange: number\r\n\tmaxRange: number\r\n}\r\n\r\nexport default function RangeSlider({minRange,maxRange}:PropsType) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState<number[]>([minRange, maxRange]);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleChange = (event: any, newValue: number | number[] | any) => {\r\n\t\tif (newValue) {\r\n\t\t\tsetValue(newValue as number[]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onApplyChangeHandler = () => {\r\n\t\tdispatch(changeRange(value[0],value[1]))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Slider className={classes.slider}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tmin={minRange}\r\n\t\t\t\tstep={5}\r\n\t\t\t\tmax={maxRange}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\taria-labelledby=\"range-slider\"\r\n\t\t\t\tvalueLabelDisplay=\"on\"\r\n\t\t\t/>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={onApplyChangeHandler}\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\tclassName={classes.button}\r\n\t\t\t>\r\n\t\t\t\tAPPLY\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t);\r\n}","import React from 'react';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport {createMuiTheme, makeStyles} from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme();\r\ntheme.spacing(2);\r\nconst useStyles = makeStyles({\r\n\tpagination: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t\tmarginTop: '20px'\r\n\t}\r\n});\r\n\r\ntype PropsType = {\r\n\tcount: number\r\n\tpage: number\r\n\trowsPerPageOptions: Array<number>\r\n\tonChangePage: (value: number) => void\r\n\tonChangeRowsPerPage: (value:number) => void\r\n\trowsPerPage: number\r\n}\r\n\r\nconst Pagination = ({\r\n\tcount,\r\n\tpage,\r\n\trowsPerPageOptions,\r\n\tonChangePage,\r\n\trowsPerPage,\r\n\tonChangeRowsPerPage\r\n}: PropsType) => {\r\n\r\n\tconst handleChangePage = (event: React.MouseEvent<HTMLButtonElement> | null,\r\n\t\tnewPage: number) => {\r\n\t\tonChangePage(newPage)\r\n\t};\r\n\r\n\tconst handleChangeRowsPerPage = (\r\n\t\tevent: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n\t) => {\r\n\t\tonChangeRowsPerPage(+event.target.value);\r\n\t};\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<TablePagination\r\n\t\t\t\tclassName={classes.pagination}\r\n\t\t\t\tcomponent=\"div\"\r\n\t\t\t\tcount={count}\r\n\t\t\t\tpage={page}\r\n\t\t\t\trowsPerPageOptions={rowsPerPageOptions}\r\n\t\t\t\tonChangePage={handleChangePage}\r\n\t\t\t\trowsPerPage={rowsPerPage}\r\n\t\t\t\tonChangeRowsPerPage={handleChangeRowsPerPage}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Pagination;\r\n","import React  from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {createMuiTheme, makeStyles} from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme();\r\ntheme.spacing(2);\r\n\r\nconst useStyles = makeStyles({\r\n\ttable: {\r\n\t\tminWidth: 650,\r\n\t},\r\n\theading: {\r\n\t\tfontWeight: 'bold'\r\n\t},\r\n\r\n});\r\n\r\ntype DataType = {\r\n\tname: string\r\n\talign: any\r\n}\r\n\r\ntype PropsType = {\r\n\theading: Array<DataType>\r\n\tchildren?: any\r\n}\r\n\r\nconst TableData = ({heading,children}: PropsType) => {\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Table className={classes.table} aria-label=\"simple table\">\r\n\t\t\t<TableHead>\r\n\t\t\t\t<TableRow>\r\n\t\t\t\t\t{heading.map((elem,index) => <TableCell key={index} className={classes.heading}\r\n\t\t\t\t\t                                align={elem.align}>{elem.name}</TableCell>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</TableRow>\r\n\t\t\t</TableHead>\r\n\t\t\t<TableBody>\r\n\t\t\t\t{children}\r\n\t\t\t</TableBody>\r\n\t\t</Table>\r\n\t);\r\n};\r\n\r\nexport default TableData;\r\n\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {createMuiTheme, makeStyles} from '@material-ui/core/styles';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../redux/redux-store';\r\nimport {\r\n  addNewPackTC, deletePackTC, getPackOfCardsTC, PackType, updatePackTC\r\n} from '../../../redux/packs-reducer';\r\nimport {Typography, Grid, Button, IconButton} from '@material-ui/core';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport ModalWindow from '../../../common/Modal';\r\nimport InputField from '../../../common/InputField';\r\nimport FormButton from '../../../common/FormBtn';\r\nimport RangeSlider from '../../../common/RangeSlider';\r\nimport Pagination from '../../../common/Pagination';\r\nimport TableData from '../../../common/Table';\r\nimport {Redirect} from 'react-router';\r\nimport {getCardsTC} from '../../../redux/cards-reducer';\r\nimport {useHistory} from 'react-router-dom';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\n\r\nconst theme = createMuiTheme();\r\nconst useStyles = makeStyles({\r\n  padding: {\r\n    padding: 0\r\n  }, button: {\r\n    width: '250px', alignContent: 'center',\r\n  }, margin: {\r\n    marginLeft: theme.spacing(5),\r\n  }, distance: {\r\n    width: '150px'\r\n  },\r\n});\r\n\r\nconst Packs = React.memo(function () {\r\n\r\n  let history = useHistory();\r\n\r\n  const classes = useStyles();\r\n\r\n  const [localPage, setlocalPage] = useState(1);\r\n  const [localRow, setlocalRow] = useState(4);\r\n  const [newName, setNewName] = useState('');\r\n  const [currentPackName, setCurrentPackName] = useState('');\r\n  const [updatePackId, setUpdatePackId] = useState('');\r\n\r\n  const [isOpenAddPackModalPopup, setIsOpenAddPackModalPopup] = useState(false);\r\n  const [isOpenModifyPackModalPopup, setIsOpenModifyPackModalPopup] = useState(false);\r\n\r\n  const isInitialized = useSelector<AppRootStateType, boolean>((state) => state.app.isInitialized);\r\n  const isAuth = useSelector<AppRootStateType, boolean | undefined>(state => state.login.isAuth);\r\n  const userProfile = useSelector<AppRootStateType, any>(state => state.login.userProfile);\r\n\r\n  const onChangePage = (newPage: number) => {\r\n    setlocalPage(newPage + 1);\r\n    dispatch(getPackOfCardsTC(newPage + 1, localRow));\r\n  };\r\n  const onChangeRowLength = (row: number) => {\r\n    setlocalRow(row);\r\n    dispatch(getPackOfCardsTC(localPage, row));\r\n  };\r\n\r\n  const state = useSelector<AppRootStateType, any>(state => state.packsReducer);\r\n  const {cardPacks, page, pageCount, cardPacksTotalCount} = state;\r\n  // const {isAuth, userProfile} = useSelector<AppRootStateType, any>(state => state.login);\r\n  const dispatch = useDispatch();\r\n\r\n  const userEmail = userProfile.email;\r\n\r\n  useEffect(() => {\r\n    dispatch(getPackOfCardsTC(localPage, localRow));\r\n  }, [pageCount, page]);\r\n\r\n  const onAddNewPackHandler = () => {\r\n    dispatch(addNewPackTC(newName));\r\n    setIsOpenAddPackModalPopup(false);\r\n  };\r\n\r\n  const onModifyPackHandler = () => {\r\n    dispatch(updatePackTC(updatePackId, currentPackName));\r\n    setIsOpenModifyPackModalPopup(false);\r\n  };\r\n\r\n  const onDeleteHandler = (id: string) => {\r\n    dispatch(deletePackTC(id));\r\n  };\r\n\r\n  const onLearningHandler = (id: string) => {\r\n    history.push('/learn/' + id);\r\n  };\r\n\r\n  const onOpenHandler = (id: string) => {\r\n    history.push('/сards/' + id);\r\n  };\r\n\r\n  const onUpdateHandler = (id: string) => {\r\n    let cardPack: PackType = cardPacks.find((el: PackType) => el._id === id);\r\n    setCurrentPackName(cardPack.name);\r\n  };\r\n\r\n  const handleModifyPackModalPopupOpen = (id: string) => {\r\n    setUpdatePackId(id);\r\n    setIsOpenModifyPackModalPopup(true);\r\n    onUpdateHandler(id);\r\n  };\r\n\r\n  const handleModifyPackModalPopupClose = () => {\r\n    setIsOpenModifyPackModalPopup(false);\r\n  };\r\n\r\n  const handleModifyPopupOpen = () => {\r\n    setIsOpenAddPackModalPopup(true);\r\n  };\r\n\r\n  const handleModifyPopupClose = () => {\r\n    setIsOpenAddPackModalPopup(false);\r\n  };\r\n\r\n  const tableCell = [{name: 'Name', align: 'inherit'}, {name: 'Card Count', align: 'center'}, {\r\n    name: 'To learn',\r\n    align: 'center'\r\n  }, {name: 'Open', align: 'right'}, {name: 'Delete', align: 'center'}, {\r\n    name: 'Modify',\r\n    align: 'left'\r\n  }, {name: 'Updated', align: 'right'},];\r\n\r\n  const randomColor = useCallback(() => {\r\n    let color = 'rgb(' + Math.round(Math.random() * 255) + ',' + Math.round(Math.random() * 255) + ',' + Math.round(Math.random() * 255) + ')';\r\n    return color;\r\n  }, []);\r\n\r\n  if (isAuth) {\r\n    return (<div>\r\n      <TableContainer component={Paper}>\r\n        <Grid\r\n          style={{marginTop: theme.spacing(2)}}\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={5}>\r\n            <Typography className={classes.margin} variant=\"h3\">Packs</Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <RangeSlider maxRange={20} minRange={0}/>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Button\r\n              onClick={() => handleModifyPopupOpen()}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<AddBoxIcon/>}\r\n            >\r\n              ADD PACK\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <TableData heading={tableCell}>\r\n          {cardPacks.map((row: PackType) => (<TableRow key={row._id}>\r\n            <TableCell className={classes.distance} component=\"th\" scope=\"row\">\r\n              {row.name}\r\n            </TableCell>\r\n            <TableCell align=\"center\">{row.cardsCount}</TableCell>\r\n            <TableCell align=\"center\">\r\n              <IconButton style={{color: randomColor()}}\r\n                          onClick={() => onLearningHandler(row._id)}\r\n                          className={classes.padding} aria-label=\"learn\">\r\n                <SchoolIcon fontSize=\"small\"/>\r\n              </IconButton>\r\n            </TableCell>\r\n            <TableCell align=\"right\">\r\n              <IconButton style={{color: randomColor()}}\r\n                          onClick={() => onOpenHandler(row._id)}\r\n                          className={classes.padding} aria-label=\"add\">\r\n                <AddBoxIcon fontSize=\"small\"/>\r\n              </IconButton>\r\n            </TableCell>\r\n            <TableCell align=\"center\">\r\n              <IconButton style={{color: userEmail !== row.user_name ? '#303030' : randomColor()}}\r\n                          disabled={userEmail !== row.user_name}\r\n                          className={classes.padding} aria-label=\"delete\"\r\n                          onClick={() => onDeleteHandler(row._id)}>\r\n                <DeleteIcon fontSize=\"small\"/>\r\n              </IconButton>\r\n            </TableCell>\r\n            <TableCell align=\"left\">\r\n              {/*Modify Button*/}\r\n              <IconButton style={{color: userEmail !== row.user_name ? '#303030' : randomColor()}}\r\n                          disabled={userEmail !== row.user_name}\r\n                          onClick={() => handleModifyPackModalPopupOpen(row._id)}\r\n                          className={classes.padding} aria-label=\"modify\">\r\n                <AutorenewIcon fontSize=\"small\"/>\r\n              </IconButton>\r\n            </TableCell>\r\n            <TableCell align=\"right\">{row.updated.slice(0, -14)}</TableCell>\r\n          </TableRow>))}\r\n        </TableData>\r\n      </TableContainer>\r\n      <Pagination count={cardPacksTotalCount} page={page - 1}\r\n                  rowsPerPageOptions={[4, 10, 20]} onChangePage={onChangePage}\r\n                  rowsPerPage={pageCount} onChangeRowsPerPage={onChangeRowLength}/>\r\n      <ModalWindow handleClose={handleModifyPopupClose} isOpen={isOpenAddPackModalPopup}\r\n                   title={'Add' + ' new pack'}>\r\n\r\n        <form onSubmit={onAddNewPackHandler}>\r\n          <Grid container spacing={2}>\r\n            <InputField value={newName}\r\n                        type={'text'} label={'Set new name'}\r\n                        onChange={setNewName}/>\r\n            <FormButton name={'Send'}/>\r\n          </Grid>\r\n        </form>\r\n      </ModalWindow>\r\n      <ModalWindow handleClose={handleModifyPackModalPopupClose} isOpen={isOpenModifyPackModalPopup}\r\n                   title={'Modify' + ' pack name'}>\r\n        <form onSubmit={onModifyPackHandler}>\r\n          <Grid container spacing={2}>\r\n            <InputField\r\n              value={currentPackName}\r\n              type={'text'} label={'Set new pack name'}\r\n              onChange={setCurrentPackName}\r\n            />\r\n            <FormButton name={'Send updated pack name'}/>\r\n          </Grid>\r\n        </form>\r\n      </ModalWindow>\r\n    </div>);\r\n  }\r\n\r\n  if (isInitialized) {\r\n    return <Redirect to={'/packs'}/>;\r\n  }\r\n  return <Redirect to={'/login'}/>;\r\n\r\n\r\n});\r\nexport default Packs;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tmarginTop: theme.spacing(8),\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tavatar: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t},\r\n\tform: {\r\n\t\twidth: '100%', // Fix IE 11 issue.\r\n\t\tmarginTop: theme.spacing(3),\r\n\t},\r\n\tsubmit: {\r\n\t\tmargin: theme.spacing(3, 0, 2),\r\n\t},\r\n}));\r\n\r\n const WrongPage = () => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Container component=\"main\" maxWidth=\"xs\">\r\n\t\t\t<CssBaseline />\r\n\t\t\t<div className={classes.paper}>\r\n\t\t\t\t<Typography component=\"h1\" variant=\"h1\">\r\n\t\t\t\t\t404\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography component=\"h1\" variant=\"h4\">\r\n\t\t\t\t\tThis page doesnt exist\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<NavLink to={'/profile'}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tclassName={classes.submit}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tGo back\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</NavLink>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default WrongPage\r\n\r\n","import {Dispatch} from 'redux';\r\nimport {mainContent} from '../api/api';\r\nimport {AppRootStateType} from './redux-store';\r\n\r\nexport type StateType = {\r\n  cards: CardType[],\r\n  cardsTotalCount: number\r\n  maxGrade: number\r\n  minGrade: number\r\n  page: number\r\n  pageCount: number\r\n  id: string\r\n};\r\n\r\nexport type CardType = {\r\n  answer: string\r\n  question: string\r\n  cardsPack_id: string\r\n  grade: number\r\n  rating: number\r\n  shots: number\r\n  type: string\r\n  created: string\r\n  updated: string\r\n  __v?: number\r\n  _id: string,\r\n  more_id?: string\r\n}\r\n\r\nlet initialState: StateType = {\r\n  cards: [],\r\n  cardsTotalCount: 0,\r\n  maxGrade: 0,\r\n  minGrade: 0,\r\n  page: 1,\r\n  pageCount: 4,\r\n  id: ''\r\n};\r\n\r\nexport const cardsReducer = (state: StateType = initialState,\r\n                             action: ActionTypes) => {\r\n  switch (action.type) {\r\n    case 'cards/SET_CARDS':\r\n      return {\r\n        ...state, ...action.data, id: action.id\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setCards = (data: StateType, id: string) => ({\r\n  type: 'cards/SET_CARDS',\r\n  data,\r\n  id\r\n})\r\n\r\ntype ActionTypes =\r\n  ReturnType<typeof setCards>\r\n\r\nexport const getCardsTC = (id: string) => (dispatch: Dispatch<any>, getState: () => AppRootStateType) => {\r\n  const {page, pageCount} = getState().cardsReducer;\r\n  mainContent.getCards(id, page, pageCount).then(\r\n    res => {\r\n      dispatch(setCards(res.data, id));\r\n    }\r\n  ).catch(error => {\r\n    console.log(error.response.data.error)\r\n  });\r\n};\r\n\r\nexport const getNewPageTC = (page: number, row: number) => (dispatch: Dispatch<any>, getState: () => AppRootStateType) => {\r\n  const {id} = getState().cardsReducer;\r\n  mainContent.getCards(id, page, row).then(\r\n    res => {\r\n      dispatch(setCards(res.data, id));\r\n    }\r\n  ).catch(error => {\r\n    console.log(error.response.data.error)\r\n  });\r\n};\r\n\r\nexport const addNewCardTC = (question:string,answer:string) => (dispatch: Dispatch<any>,getState: () => AppRootStateType) => {\r\n\tconst {id} = getState().cardsReducer;\r\n\tmainContent.addNewCard(id, question, answer).then(\r\n\t\tres => {\r\n\t\t\tdispatch(getCardsTC(id));\r\n\r\n\t\t}\r\n\t).catch(error => {\r\n\t\tconsole.log(error.response.data.error)\r\n\t});\r\n};\r\n\r\nexport const sendGradeTC = (cardId:string,grade:number) => (dispatch: Dispatch<any>, getState: () => AppRootStateType) => {\r\n\tconst {id} = getState().cardsReducer;\r\n\tmainContent.sendCardGrade(cardId, grade).then(\r\n\t\tres => {\r\n\t\t\tdispatch(getCardsTC(id));\r\n\t\t}\r\n\t).catch(error => {\r\n\t\tconsole.log(error.response.data.error)\r\n\t});\r\n};\r\n\r\nexport const deleteCardTC = (cardId: string) => (dispatch: Dispatch<any>, getState: () => AppRootStateType) => {\r\n  const {id} = getState().cardsReducer;\r\n  mainContent.deleteCard(cardId).then(\r\n    res => {\r\n      dispatch(getCardsTC(id));\r\n    }\r\n  ).catch(error => {\r\n    console.log(error.response.data.error)\r\n  });\r\n};\r\n\r\nexport const updateCardTC = (cardId: string, currentQuestion: string, currentAnswer: string) => (dispatch: Dispatch<any>, getState: () => AppRootStateType) => {\r\n  const {id} = getState().cardsReducer;\r\n  mainContent.updateCard(cardId, currentQuestion, currentAnswer).then(\r\n    res => {\r\n      dispatch(getCardsTC(id));\r\n    }\r\n  ).catch(error => {\r\n    console.log(error.response.data.error)\r\n  });\r\n};","import React, {useCallback, useState} from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Button, Grid, IconButton, Typography} from '@material-ui/core';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport ModalWindow from '../../../common/Modal';\r\nimport InputField from '../../../common/InputField';\r\nimport FormButton from '../../../common/FormBtn';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport {createMuiTheme, makeStyles} from '@material-ui/core/styles';\r\nimport TableData from '../../../common/Table';\r\nimport {CardType, deleteCardTC, getNewPageTC, addNewCardTC, updateCardTC} from '../../../redux/cards-reducer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../redux/redux-store';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Pagination from '../../../common/Pagination';\r\nimport {Redirect, useHistory} from 'react-router-dom';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\n\r\nconst theme = createMuiTheme();\r\ntheme.spacing(2);\r\n\r\nconst useStyles = makeStyles({\r\n\tpadding: {\r\n\t\tpadding: 0\r\n\t}, button: {\r\n\t\twidth: '250px', alignContent: 'center',\r\n\t}, margin: {\r\n\t\tmarginLeft: theme.spacing(5),\r\n\t}, distance: {\r\n\t\twidth: '150px'\r\n\t},\r\n});\r\n\r\nconst Cards = () => {\r\n\tconst classes = useStyles();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst state = useSelector<AppRootStateType, any>(state => state.cardsReducer);\r\n\tconst {isAuth, userProfile} = useSelector<AppRootStateType, any>(state => state.login);\r\n\tconst {cards, cardsTotalCount, page, pageCount, id} = state;\r\n\tconst cardPacks = useSelector<AppRootStateType, any>(state => state.packsReducer.cardPacks);\r\n\r\n  const [localPage, setlocalPage] = useState(1);\r\n  const [localRow, setlocalRow] = useState(4);\r\n  const [question, setQuestion] = useState('');\r\n  const [answer, setAnswer] = useState('');\r\n  const [currentQuestion, setCurrentQuestion] = useState('');\r\n  const [currentAnswer, setCurrentAnswer] = useState('');\r\n  const [isOpenAddCardModalPopup, setIsOpenAddCardModalPopup] = useState(false);\r\n  const [isOpenModifyCardModalPopup, setIsOpenModifyCardModalPopup] = useState(false);\r\n  const [updateCardId, setUpdateCardId] = useState('');\r\n  const [showBtn, setShowBtn] = useState(true);\r\n\r\n  // if (cardPacks.length) {\r\n  // \tconst userEmail = userProfile.email;\r\n  // \tlet findPack = cardPacks.find((elem: any) => elem._id === id);\r\n  // \tif (findPack) {\r\n  // \t\tfindPack.user_name === userEmail ? setShowBtn(true) : setShowBtn(false);\r\n  // \t}\r\n  // }\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsOpenAddCardModalPopup(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsOpenAddCardModalPopup(false);\r\n  };\r\n\r\n  const onAddNewPackHandler = () => {\r\n    dispatch(addNewCardTC(question, answer));\r\n    setIsOpenAddCardModalPopup(false);\r\n  };\r\n  let history = useHistory();\r\n\r\n  const onLearnHandler = () => {\r\n    history.push(\"/learn\");\r\n  };\r\n\r\n  const onDeleteHandler = (id: string) => {\r\n    dispatch(deleteCardTC(id));\r\n  };\r\n\r\n  const onUpdateHandler = (id: string) => {\r\n    const card: CardType = cards.find((el: CardType) => el._id === id);\r\n    setCurrentQuestion(card.question);\r\n    setCurrentAnswer(card.answer);\r\n  };\r\n\r\n  const onModifyCardHandler = () => {\r\n    dispatch(updateCardTC(updateCardId, currentQuestion, currentAnswer));\r\n    setIsOpenModifyCardModalPopup(false);\r\n  };\r\n\r\n  const handleModifyCardModalPopupOpen = (id: string) => {\r\n    setUpdateCardId(id);\r\n    setIsOpenModifyCardModalPopup(true);\r\n    onUpdateHandler(id);\r\n  };\r\n\r\n  const handleModifyCardModalPopupClose = () => {\r\n    setIsOpenModifyCardModalPopup(false);\r\n  };\r\n\r\n\tconst onChangePage = (newPage: number) => {\r\n\t\tsetlocalPage(newPage + 1);\r\n\t\tdispatch(getNewPageTC(newPage + 1, localRow));\r\n\t};\r\n\tconst onChangeRowLength = (row: number) => {\r\n\t\tsetlocalRow(row);\r\n\t\tdispatch(getNewPageTC(localPage, row));\r\n\t};\r\n\r\n  const tableCell = [\r\n    {name: 'Question', align: 'inherit'},\r\n    {name: 'Answer', align: 'center'},\r\n    {name: 'Grade', align: 'center'},\r\n    {name: 'Delete', align: 'center'},\r\n    {name: 'Modify', align: 'left'},\r\n    {name: 'Updated', align: 'right'},\r\n  ];\r\n\r\n  const randomColor = useCallback(() => {\r\n    let color = 'rgb(' + Math.round(Math.random() * 255)\r\n      + ',' + Math.round(Math.random() * 255) + ',' + Math.round(Math.random() * 255) + ')';\r\n    return color;\r\n  }, []);\r\n\r\n  if (isAuth) {\r\n    return (\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Grid\r\n            style={{marginTop: theme.spacing(2)}}\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item xs={7}>\r\n              <Typography className={classes.margin} variant=\"h3\">Cards</Typography>\r\n            </Grid>\r\n            {showBtn ? <Grid item xs={2}>\r\n              <Button\r\n                onClick={() => handleDialogOpen()}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<AddBoxIcon/>}\r\n              >\r\n                ADD CARD\r\n              </Button>\r\n            </Grid> : null}\r\n\r\n            <Grid item xs={2}>\r\n              <Button\r\n                onClick={onLearnHandler}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SchoolIcon/>}\r\n              >\r\n                To learn\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          <TableData heading={tableCell}>\r\n            {cards.map((row: CardType) => (\r\n              <TableRow key={row._id}>\r\n                <TableCell className={classes.distance} component=\"th\" scope=\"row\">\r\n                  {row.question}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{row.answer}</TableCell>\r\n                <TableCell align=\"center\">{row.grade}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <IconButton style={{color: randomColor()}}\r\n                              className={classes.padding} aria-label=\"delete\"\r\n                    onClick={() => onDeleteHandler(row._id)}>\r\n                    <DeleteIcon fontSize=\"small\"/>\r\n                  </IconButton>\r\n                </TableCell>\r\n                <TableCell align=\"left\">\r\n                  <IconButton style={{color: randomColor()}}\r\n                              className={classes.padding} aria-label=\"modify\"\r\n                              onClick={() => handleModifyCardModalPopupOpen(row._id)}>\r\n                    <AutorenewIcon fontSize=\"small\"/>\r\n                  </IconButton>\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.updated.slice(0, -14)}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableData>\r\n\r\n        </TableContainer>\r\n        <Pagination count={cardsTotalCount} page={page - 1}\r\n                    rowsPerPageOptions={[4, 10, 20]} onChangePage={onChangePage}\r\n                    rowsPerPage={pageCount} onChangeRowsPerPage={onChangeRowLength}/>\r\n        <ModalWindow handleClose={() => handleDialogClose()} isOpen={isOpenAddCardModalPopup} title={'Add' +\r\n        ' new card'}>\r\n          <form onSubmit={() => onAddNewPackHandler()}>\r\n            <Grid container spacing={2}>\r\n              <InputField value={question}\r\n                          type={'text'} label={'Enter question'}\r\n                          onChange={setQuestion}/>\r\n              <InputField value={answer}\r\n                          type={'text'} label={'Enter answer'}\r\n                          onChange={setAnswer}/>\r\n              <FormButton name={'Send'}/>\r\n            </Grid>\r\n          </form>\r\n        </ModalWindow>\r\n        <ModalWindow handleClose={handleModifyCardModalPopupClose} isOpen={isOpenModifyCardModalPopup} title={'Modify' +\r\n        ' card QA'}>\r\n          <form onSubmit={onModifyCardHandler}>\r\n            <Grid container spacing={2}>\r\n              <InputField\r\n                value={currentQuestion}\r\n                type={'text'} label={'Set new question'}\r\n                onChange={setCurrentQuestion}\r\n              />\r\n              <InputField\r\n                value={currentAnswer}\r\n                type={'text'} label={'Set new answer'}\r\n                onChange={setCurrentAnswer}\r\n              />\r\n              <FormButton name={'Send updated card QA'}/>\r\n            </Grid>\r\n          </form>\r\n        </ModalWindow>\r\n      </div>);\r\n  }\r\n  return <Redirect to={'/login'}/>;\r\n};\r\n\r\nexport default Cards;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {CardType, getCardsTC, sendGradeTC} from '../../../redux/cards-reducer';\r\nimport s from './Learn.module.scss';\r\nimport {useParams} from 'react-router-dom';\r\nimport {Button, createMuiTheme} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {AppRootStateType} from \"../../../redux/redux-store\";\r\nimport ReactCardFlip from \"react-card-flip\";\r\n// @ts-ignore\r\nimport Zoom from 'react-reveal/Zoom';\r\n\r\nconst theme = createMuiTheme();\r\ntheme.spacing(2);\r\n\r\nconst useStyles = makeStyles({\r\n\tpadding: {\r\n\t\tpadding: 0\r\n\t}, buttonControl: {\r\n\t\twidth: '300px',\r\n\t\theight: '40px',\r\n\t\talignContent: 'center',\r\n\t\tborderRadius: '10px',\r\n\t\tbackground: '#2c3258',\r\n\t\tborder: '1px solid #e4b61a',\r\n\t\tmargin: '40px',\r\n\t\tcolor: '#e4b61a'\r\n\t}, buttonGrade: {\r\n\t\tcolor: '#e4b61a',\r\n\t\tmargin: '8px',\r\n\t\tborderColor: '#e4b61a',\r\n\t\ttextDecoration: 'none',\r\n\t\tpadding: '3px 9px',\r\n\t\tfontSize: '0.8125rem',\r\n\t\tborder: '1px solid #e4b61a'\r\n\t}, margin: {\r\n\t\tmarginLeft: theme.spacing(5),\r\n\t}, card: {\r\n\t\twidth: '300px',\r\n\t\theight: '400px',\r\n\t\tmargin: '40px',\r\n\t\tborder: '1px solid #e4b61a',\r\n\t\tborderRadius: '34px',\r\n\t\ttransformStyle: 'preserve-3d',\r\n\t\tposition: 'relative',\r\n\t\tbackground: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center'\r\n\t}\r\n});\r\n\r\ntype PropsType = {}\r\n\r\nconst grades = ['не знал', 'забыл', 'долго думал', 'перепутал', 'знал'];\r\n\r\nconst getCard = (cards: CardType[]) => {\r\n\tconst sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n\tconst rand = Math.random() * sum;\r\n\tconst res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n\t\tconst newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n\t\treturn {sum: newSum, id: newSum < rand ? i : acc.id};\r\n\t}, {sum: 0, id: -1});\r\n\treturn cards[res.id + 1];\r\n};\r\n\r\n\r\nconst Learn = (props: PropsType) => {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const [isChecked, setIsChecked] = useState<boolean>(true);\r\n    const [isDisabled, setIsDisabled] = useState<boolean>(false);\r\n    const [isFlipped, setIsFlipped] = useState<boolean>(false);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n    // const [first, setFirst] = useState<boolean>(0);\r\n    const {cards} = useSelector((store: AppRootStateType) => store.cardsReducer);\r\n    const {id} = useParams();\r\n\r\n    const [card, setCard] = useState<CardType>({\r\n        _id: 'fake',\r\n        cardsPack_id: '',\r\n\r\n        answer: 'answer fake',\r\n        question: 'question fake',\r\n        grade: 1,\r\n        shots: 0,\r\n\r\n        type: '',\r\n        rating: 0,\r\n        more_id: '',\r\n\r\n        created: '',\r\n        updated: '',\r\n    });\r\n\r\n\tuseEffect(() => {\r\n\t\tif (first) {\r\n\t\t\tdispatch(getCardsTC(id));\r\n\t\t\tsetFirst(false);\r\n\t\t}\r\n\t\tif (cards.length > 0) setCard(getCard(cards));\r\n\t\treturn () => {\r\n\t\t};\r\n\t}, [dispatch, id, cards, first]);\r\n\r\n\tconst onNext = () => {\r\n\t\tsetIsChecked(true);\r\n\t\tsetIsDisabled(false)\r\n\t\tif (cards.length > 0) {\r\n\t\t\tsetCard(getCard(cards));\r\n\t\t} else {\r\n\r\n        }\r\n    }\r\n    const onClickHandlerEnable = () => {\r\n        setIsFlipped(true)\r\n    }\r\n    const onClickHandlerDisable = () => {\r\n        setIsFlipped(false)\r\n    }\r\n\r\n\tconst onGradeHandler = (i: number) => {\r\n\t\tdispatch(sendGradeTC(card._id, i + 1));\r\n\t\tsetIsDisabled(true)\r\n\t};\r\n\r\n\r\n    return (\r\n        <div className={s.cards_wrapper}>\r\n            {isChecked ? (\r\n                <>\r\n                <Zoom left>\r\n                    <div className={s.card_container}>\r\n                        <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\r\n                            <div className={`${classes.card} ${s.card}`} onClick={onClickHandlerEnable}>\r\n                                <h2 className={s.title}>{card.question}</h2>\r\n                            </div>\r\n                            <div className={classes.card} onClick={onClickHandlerDisable}>\r\n                                <h2 className={s.title}>{card.answer}</h2>\r\n                            </div>\r\n                        </ReactCardFlip>\r\n                    </div>\r\n                    </Zoom>\r\n                    <div>\r\n                        <Button onClick={() => setIsChecked(false)} className={classes.buttonControl}>check</Button>\r\n                    </div>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <div>\r\n                        <div className={`${classes.card} ${s.card}`}>\r\n\t\t\t\t\t\t\t<h2 className={s.title}>{card.answer}</h2>\r\n                        </div>\r\n                        {grades.map((g, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button key={'grade-' + i} onClick={() => onGradeHandler(i)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.buttonGrade} disabled={isDisabled}>{g}</Button>\r\n                        ))}\r\n                        <div><Button onClick={onNext} className={classes.buttonControl}>next</Button></div>\r\n                    </div>\r\n                </>\r\n            )\r\n            }\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Learn;","import {Dispatch} from \"redux\"\r\nimport {authAPI} from \"../api/api\";\r\nimport {loginAC} from './login-reducer';\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n  isInitialized: false,\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n  switch (action.type) {\r\n    // case 'APP/SET-STATUS':\r\n    //     return {...state, status: action.status}\r\n    // case 'APP/SET-ERROR':\r\n    //     return {...state, error: action.error}\r\n    case \"APP/INITIALIZE-APP\":\r\n      return {...state, isInitialized: action.isInitialized}\r\n    default:\r\n      return {...state}\r\n  }\r\n}\r\n\r\n\r\nexport const initializeAppAC = (isInitialized: boolean) => ({type: 'APP/INITIALIZE-APP', isInitialized} as const)\r\n\r\n\r\nexport const initializeAppTC = () => async (dispatch: Dispatch) => {\r\n  try {\r\n    const res = await authAPI.me()\r\n    dispatch(initializeAppAC(true))\r\n    dispatch(loginAC(res))\r\n  } catch (e) {\r\n    dispatch(initializeAppAC(true))\r\n    console.log(e.response.data.error)\r\n  }\r\n}\r\n\r\nexport type InitialStateType = {\r\n  isInitialized: boolean\r\n}\r\n\r\nexport type InitializeAppActionType = ReturnType<typeof initializeAppAC>\r\n\r\n\r\ntype ActionsType = | InitializeAppActionType\r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {LoginPage} from './components/auth/Login/LoginPage';\r\nimport {RegisterContainer} from './components/auth/Register/RegisterContainer';\r\nimport {PasswordRecovery} from './components/auth/PasswordRecovery/PasswordRecovery';\r\nimport {PasswordCreation} from './components/auth/PasswordCreation/PasswordCreation';\r\nimport {Profile} from \"./components/Profile/Profile\";\r\nimport Packs from './components/Main-content/Packs/Packs';\r\nimport WrongPage from './components/WrongPage';\r\nimport Cards from './components/Main-content/Cards/Cards';\r\nimport Learn from \"./components/Main-content/Learn/Learn\";\r\nimport {initializeAppTC} from './redux/app-reducer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from './redux/redux-store';\r\nimport {CircularProgress} from '@material-ui/core';\r\n\r\nfunction App() {\r\n\r\n  const isInitialized = useSelector<AppRootStateType, boolean>((state) => state.app.isInitialized);\r\n\r\n  const dispatch = useDispatch();\r\n  console.log('befor isInitialized ', isInitialized)\r\n  useEffect(() => {\r\n    dispatch(initializeAppTC())\r\n  }, [])\r\n  console.log('after isInitialized ', isInitialized)\r\n\r\n  if (!isInitialized) {\r\n    return <div\r\n      style={{position: 'fixed', top: '30%', textAlign: 'center', width: '100%'}}>\r\n      <CircularProgress/>\r\n    </div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <Navbar/>\r\n      </header>\r\n      <Switch>\r\n        <Route path={'/profile/:userId?'}\r\n               render={() => <Profile/>}/>\r\n        <Route path={'/login'}\r\n               render={() => <LoginPage/>}/>\r\n        <Route path={'/register'}\r\n               render={() => <RegisterContainer/>}/>\r\n        <Route path={'/passwordRecovery'}\r\n               render={() => <PasswordRecovery/>}/>\r\n        <Route path={'/set-new-password/:token?'}\r\n               render={() => <PasswordCreation/>}/>\r\n        <Route path={'/packs'}\r\n               render={() => <Packs/>}/>\r\n        <Route path={'/сards/:id'}\r\n               render={() => <Cards/>}/>\r\n        <Route path={'/learn/:id'}\r\n               render={() => <Learn/>}/>\r\n        <Route path={'*'}\r\n               render={() => <WrongPage/>}/>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {registerReducer} from \"./register-reducer\";\r\nimport passwordRecoveryReducer from './passwordRecovery-reducer';\r\nimport pssawordCreationReducer from './pssawordCreation-reducer';\r\nimport {loginReducer} from './login-reducer';\r\nimport {packsReducer} from \"./packs-reducer\";\r\nimport {cardsReducer} from \"./cards-reducer\";\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n  login: loginReducer,\r\n  register: registerReducer,\r\n  pwRecoveryRequest: passwordRecoveryReducer,\r\n  passwordUpdate: pssawordCreationReducer,\r\n  packsReducer,\r\n  cardsReducer,\r\n  app: appReducer,\r\n});\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport App from './App';\r\nimport {store} from './redux/redux-store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards_wrapper\":\"Learn_cards_wrapper__3oG6C\"};"],"sourceRoot":""}