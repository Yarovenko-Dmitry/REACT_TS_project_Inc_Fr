{"version":3,"sources":["serviceWorker.ts","common/NavbarButton.tsx","components/Navbar/Navbar.tsx","api/api.ts","redux/login-reducer.ts","common/FormBtn.tsx","components/auth/Login/LoginPage.tsx","redux/register-reducer.ts","components/auth/Register/RegisterContainer.tsx","redux/passwordRecovery-reducer.ts","common/InputField.tsx","common/FormWrapper.tsx","components/auth/PasswordRecovery/PasswordRecovery.tsx","redux/pssawordCreation-reducer.ts","components/auth/PasswordCreation/PasswordCreation.tsx","components/Profile/Profile.tsx","redux/packs-reducer.ts","common/Modal.tsx","common/RangeSlider.tsx","common/Pagination.tsx","common/Table.tsx","redux/cards-reducer.ts","components/Main-content/Packs/Packs.tsx","components/WrongPage.tsx","components/Main-content/Cards/Cards.tsx","App.tsx","redux/app-reducer.ts","redux/redux-store.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","theme","createStyles","btn","margin","spacing","color","borderColor","textDecoration","NavbarButton","link","name","classes","to","style","Button","variant","className","size","marginAutoItem","navbar","backgroundColor","Navbar","AppBar","position","Toolbar","Typography","Box","instance","axios","create","withCredentials","baseURL","mainContent","page","count","min","max","get","post","cardsPack","id","delete","put","_id","row","question","answer","card","cardsPack_id","passwordRecovery","email","from","message","password","resetPasswordToken","authAPI","rememberMe","data","internalState","isAuth","userProfile","avatar","publicCardPacksCount","created","updated","isAdmin","verified","error","loginAC","type","loginReducer","state","action","submit","FormButton","disable","fullWidth","disabled","root","height","centr","paper","display","flexDirection","alignItems","palette","secondary","main","form","width","marginTop","LoginPage","useSelector","login","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","then","res","setLoginTC","Grid","container","component","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","handleSubmit","noValidate","TextField","required","label","autoComplete","autoFocus","onChange","handleChange","value","FormControlLabel","control","Checkbox","Link","isRegistered","RegisterContainer","register","validate","a","console","log","justify","FormControl","FormLabel","FormGroup","getFieldProps","errors","initialState","success","loading","setErrorAC","setSuccessAC","setLoadingAC","passwordRecoveryReducer","ValidationTextField","withStyles","borderWidth","borderLeftWidth","padding","input","marginBottom","InputField","helperText","event","currentTarget","FormWrapper","onsubmit","children","title","Container","maxWidth","PasswordRecovery","validateOnBlur","validateOnChange","test","catch","response","errorObject","request","recoverPasswordTC","trim","pwRecoveryRequest","pssawordCreationReducer","PasswordCreation","validationSchema","Yup","shape","changepassword","when","is","val","length","oneOf","token","useParams","status","setNewPasswordTC","passwordUpdate","confirm","Profile","s","profileBlock","profileHeader","onClick","info","cardPacks","pageCount","minCardsCount","maxCardsCount","cardPacksTotalCount","setRange","getPackOfCardsTC","getState","packsReducer","createMuiTheme","modal","justifyContent","background","border","boxShadow","shadows","button","alignContent","ModalWindow","isOpen","handleClose","onClose","Modal","aria-labelledby","aria-describedby","open","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","DialogActions","RangeSlider","minRange","maxRange","React","useState","setValue","gutterBottom","Slider","step","newValue","valueLabelDisplay","pagination","Pagination","rowsPerPageOptions","onChangePage","rowsPerPage","onChangeRowsPerPage","TablePagination","newPage","target","table","minWidth","heading","fontWeight","TableData","Table","aria-label","TableHead","TableRow","map","elem","TableCell","align","TableBody","cards","cardsTotalCount","maxGrade","minGrade","setCards","getCardsTC","cardsReducer","getNewPageTC","marginLeft","distance","Packs","memo","history","useHistory","localPage","setlocalPage","localRow","setlocalRow","newName","setNewName","setIsOpen","useEffect","onDeleteHandler","deletePackTC","onUpdateHandler","updatePackTC","randomColor","useCallback","Math","round","random","TableContainer","direction","startIcon","key","scope","cardsCount","IconButton","push","fontSize","slice","WrongPage","Cards","setQuestion","setAnswer","onAddNewPackHandler","addNewCardTC","grade","App","path","render","isInitialized","reducers","combineReducers","cardsPacks","app","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d468e921.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport {Button, createStyles, Theme} from '@material-ui/core';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\tbtn: {\r\n\t\t\tmargin: theme.spacing(1),\r\n\t\t\tcolor: '#e4b61a',\r\n\t\t\tborderColor: '#e4b61a',\r\n\t\t\ttextDecoration:'none'\r\n\t\t},\r\n\t}),\r\n);\r\n\r\ntype PropsType = {\r\n\tlink: string,\r\n\tname: string\r\n}\r\n\r\nconst NavbarButton = ({link,name}:PropsType) => {\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<NavLink to={link} style={{textDecoration: 'none'}}>\r\n\t\t\t<Button variant='outlined' className={classes.btn}\r\n\t\t\t        size={'small'}>{name}</Button>\r\n\t\t</NavLink>\r\n\t);\r\n};\r\n\r\nexport default NavbarButton;\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n\tAppBar,\r\n\tBox,\r\n\tcreateStyles,\r\n\tTheme,\r\n\tToolbar,\r\n\tTypography\r\n} from '@material-ui/core';\r\nimport NavbarButton from '../../common/NavbarButton';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\tmarginAutoItem: {\r\n\t\t\tmargin: 'auto'\r\n\t\t},\r\n\t\tnavbar: {\r\n\t\t\tbackgroundColor: '#2c3258'\r\n\t\t},\r\n\t\tbtn: {\r\n\t\t\tmargin: theme.spacing(1),\r\n\t\t\tcolor: '#e4b61a',\r\n\t\t\tborderColor: '#e4b61a',\r\n\t\t\ttextDecoration:'none'\r\n\t\t},\r\n\t}),\r\n);\r\n\r\nconst Navbar = () => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<AppBar position=\"static\" className={classes.navbar}>\r\n\t\t\t<Toolbar>\r\n\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\tCards\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Box className={classes.marginAutoItem}>\r\n\t\t\t\t\t<NavbarButton link={'/profile'} name={'Profile'}/>\r\n\t\t\t\t\t<NavbarButton link={'/login'} name={'login'}/>\r\n\t\t\t\t\t<NavbarButton link={'/register'} name={'register'}/>\r\n\t\t\t\t\t<NavbarButton link={'/passwordRecovery'} name={'Recovery'}/>\r\n\t\t\t\t\t<NavbarButton link={'/set-new-password'} name={'New password'}/>\r\n\t\t\t\t\t<NavbarButton link={'/packs'} name={'Packs of cards'}/>\r\n\t\t\t\t\t<NavbarButton link={'/сards'} name={'Сards'}/>\r\n\t\t\t\t</Box>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\r\n\t);\r\n};\r\nexport default Navbar;\r\n\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: 'https://neko-back.herokuapp.com/2.0',\r\n});\r\n\r\nexport const mainContent = {\r\n\tgetPacksOfCards(page: number, count: number, min: number, max: number) {\r\n\t\treturn instance.get(`/cards/pack?page=${page}&pageCount=${count}&min=${min}&max=${max}`);\r\n\t},\r\n\tgetRangedCards(page: number, count: number, min: number, max: number) {\r\n\r\n\t\treturn instance.get(`/cards/pack?page=${page}&pageCount=${count}&min=${min}&max=${max}`);\r\n\t},\r\n\taddNewPack(name: string) {\r\n\t\treturn instance.post(`/cards/pack`, {\r\n\t\t\tcardsPack: {\r\n\t\t\t\tname: name\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\tdeletePack(id: string) {\r\n\t\treturn instance.delete(`/cards/pack?id=${id}`);\r\n\t},\r\n\tupdatePack(id: string, name: string) {\r\n\t\treturn instance.put(\r\n\t\t\t`/cards/pack`,\r\n\t\t\t{\r\n\t\t\t\tcardsPack: {\r\n\t\t\t\t\t_id: id,\r\n\t\t\t\t\tname: name\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t},\r\n\tgetCards(id: string, page: number, row: number) {\r\n\t\treturn instance.get(`/cards/card?cardsPack_id=${id}&page=${page}&pageCount=${row}`);\r\n\t},\r\n\taddNewCard(id: string, question: string, answer: string) {\r\n\t\treturn instance.post(`/cards/card`, {\r\n\t\t\tcard: {\r\n\t\t\t\tcardsPack_id: id,\r\n\t\t\t\tquestion,\r\n\t\t\t\tanswer\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n};\r\n\r\nexport const passwordRecovery = {\r\n\tgetToken(email: string) {\r\n\t\tlet promise = instance.post(`/auth/forgot/`, {\r\n\t\t\temail,\r\n\t\t\tfrom: 'password-reset-server <noreply@noreply.it>',\r\n\t\t\tmessage: `\r\n\t\t\t\t\t<div style=\"background-color: lime; padding: 15px\">\r\n\t\t\t\t\tpassword recovery link: \r\n\t\t\t\t\t<a href='http://localhost:3000/#/set-new-password/$token$'>link</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t`\r\n\t\t});\r\n\t\treturn promise;\r\n\t},\r\n\tnewPassword(password: string, resetPasswordToken: string) {\r\n\t\treturn instance.post(`/auth/set-new-password`, {password, resetPasswordToken});\r\n\t}\r\n};\r\n\r\nexport const profileAPI = {\r\n\tgetProfile(userId: string) {\r\n\t\treturn instance.get(`profile/` + userId);\r\n\t},\r\n\tgetStatus(userId: string) {\r\n\t\treturn instance.get(`profile/status/` + userId);\r\n\t},\r\n\tupdateStatus(status: string) {\r\n\t\treturn instance.put(`profile/status`, {status: status});\r\n\t}\r\n};\r\n\r\nexport const authAPI = {\r\n\tme() {\r\n\t\treturn instance.post<UsersDataType>(`auth/me`).then((res) => {\r\n\t\t\treturn res.data;\r\n\t\t});\r\n\t},\r\n\tlogin(email: string, password: string, rememberMe = false) {\r\n\t\treturn instance.post(`auth/login`, {email, password, rememberMe});\r\n\r\n\t},\r\n\tlogout() {\r\n\t\treturn instance.delete(`auth/me`);\r\n\t},\r\n\tregister(data: RegisterDataType) {\r\n\r\n\t\treturn instance.post(`/auth/register`, {...data});\r\n\t}\r\n};\r\n\r\ntype RegisterDataType = {\r\n\temail: string,\r\n\tpassword: string\r\n}\r\nexport type UsersDataType = {\r\n\t_id: string;\r\n\temail: string | undefined;\r\n\tname: string;\r\n\tavatar?: string;\r\n\tpublicCardPacksCount: number; // количество колод\r\n\tcreated: any;\r\n\tupdated: any;\r\n\tisAdmin: boolean;\r\n\tverified: boolean; // подтвердил ли почту\r\n\trememberMe: boolean;\r\n\terror: string;\r\n}\r\n\r\nexport type CardDataType = {\r\n\tcards: Array<CardsType>,\r\n\tcardsTotalCount?: number,\r\n\tmaxGrade?: number,\r\n\tminGrade?: number,\r\n\tpage?: number,\r\n\tpageCount?: number\r\n}\r\nexport type CardsType = {\r\n\tanswer: string,\r\n\tquestion: string,\r\n\tcardsPack_id: string,\r\n\tgrade: number,\r\n\trating: number,\r\n\tshots: number,\r\n\ttype: string,\r\n\tcreated: string,\r\n\tupdated: string,\r\n\t__v: number,\r\n\t_id: string,\r\n}","import {Dispatch} from 'redux';\r\nimport {authAPI, UsersDataType} from '../api/api';\r\nimport {AppRootStateType} from './redux-store';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\n\r\nexport type LoginReducerType = {\r\n    isAuth?: boolean,\r\n    userProfile: UsersDataType\r\n};\r\n\r\nlet internalState: LoginReducerType = {\r\n    isAuth: false,\r\n    userProfile: {\r\n        _id: '',\r\n        email: '',\r\n        name: '',\r\n        avatar: '',\r\n        publicCardPacksCount: 0,\r\n        created: 'YYYY-MM-DD',\r\n        updated: 'YYYY-MM-DD',\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n        error: '',\r\n    }\r\n};\r\n\r\nconst loginReducer = (state: LoginReducerType = internalState, action: ActionTypes): LoginReducerType => {\r\n\r\n    switch (action.type) {\r\n        case 'login/SET_USER_DATA':\r\n            return {\r\n                ...state,\r\n                userProfile: action.data,\r\n                isAuth: true\r\n            };\r\n        case 'login/LOGOUT':\r\n            return {\r\n                ...state,\r\n                isAuth: false\r\n            };\r\n        // Андрея - не трогать\r\n        case 'login/AUTH-ME':\r\n            return {...state, isAuth: action.isAuth, userProfile: action.userProfile};\r\n// Андрея - не трогать\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst loginAC = (data: UsersDataType) => ({\r\n    type: 'login/SET_USER_DATA',\r\n    data\r\n} as const);\r\n\r\nconst logoutAC = () => ({\r\n    type: 'login/LOGOUT',\r\n} as const);\r\n\r\ntype ActionTypes =\r\n    | ReturnType<typeof loginAC>\r\n    | ReturnType<typeof logoutAC>\r\n    // Андрея - не трогать\r\n    | ReturnType<typeof authMeAC>\r\n// Андрея - не трогать\r\n\r\nexport const setLoginTC = (email: string, password: string, rememberMe: boolean = false) => (dispatch: Dispatch<ActionTypes>) => {\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(res => {\r\n                dispatch(loginAC(res.data))\r\n            }\r\n        )\r\n};\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n    authAPI.logout()\r\n        .then(res => {\r\n            if (res.data.info === 'logOut success —ฅ/ᐠ.̫ .ᐟ\\\\ฅ—') {\r\n                dispatch(logoutAC())\r\n            }\r\n        })\r\n}\r\n\r\n// Андрея - не трогать\r\nexport const authMeAC = (isAuth: boolean, userProfile: UsersDataType) => ({\r\n    type: 'login/AUTH-ME',\r\n    isAuth,\r\n    userProfile\r\n} as const);\r\n\r\nexport const authMeTC = () => async (dispatch: ThunkDispatch<AppRootStateType, {}, ActionTypes>) => {\r\n    try {\r\n        const res = await authAPI.me();\r\n        dispatch(authMeAC(true, res));\r\n    } catch (e) {\r\n        console.log(e.response.data.error)\r\n    }\r\n}\r\n// Андрея - не трогать\r\n\r\n\r\nexport default loginReducer\r\n\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tsubmit: {\r\n\t\tmargin: theme.spacing(3, 0, 2),\r\n\t\tbackgroundColor: '#e4b61a',\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: '#2c3258'\r\n\t\t}\r\n\t},\r\n}));\r\n\r\n\r\ntype PropsType = {\r\n\tdisable?: boolean\r\n\tname: string\r\n}\r\n\r\nconst FormButton = ({disable,name}:PropsType) => {\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Button\r\n\t\t\ttype=\"submit\"\r\n\t\t\tfullWidth\r\n\t\t\tvariant=\"contained\"\r\n\t\t\tcolor=\"primary\"\r\n\t\t\tclassName={classes.submit}\r\n\t\t\tdisabled={disable}\r\n\t\t>\r\n\t\t\t{name}\r\n\t\t</Button>\r\n\t);\r\n};\r\n\r\nexport default FormButton;\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useFormik} from 'formik';\r\nimport {setLoginTC} from '../../../redux/login-reducer';\r\nimport {AppRootStateType} from '../../../redux/redux-store';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport FormButton from '../../../common/FormBtn';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n\r\n  },\r\n  centr: {\r\n    margin: '0 auto'\r\n  },\r\n\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport function LoginPage() {\r\n\r\n  const isAuth = useSelector<AppRootStateType, boolean | undefined>(state => state.login.isAuth)\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch()\r\n\r\n  const formik: any = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      rememberMe: false\r\n    },\r\n    onSubmit: values => {\r\n      const {email, password, rememberMe} = values\r\n      dispatch(setLoginTC(email, password, rememberMe))\r\n      // console.log(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n\r\n  if (isAuth) {\r\n    return <Redirect to={'/profile'}/>\r\n  }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline/>\r\n      {/*<Grid item xs={false} sm={4} md={7} className={classes.image} />*/}\r\n      <Grid item xs={12} sm={8} md={5} className={classes.centr} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon/>\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Login\r\n          </Typography>\r\n          <form onSubmit={formik.handleSubmit}\r\n                className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={formik.handleChange}\r\n              value={formik.values.email}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              // autoComplete=\"current-password\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.password}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox id=\"rememberMe\"\r\n                                 name=\"rememberMe\"\r\n                                 onChange={formik.handleChange}\r\n                                 value={formik.values.rememberMe} color=\"primary\"/>}\r\n              label=\"Remember me    772316772316\"\r\n            />\r\n            <FormButton name={'Log in'}/>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <NavLink to='/passwordRecovery'>\r\n                  <Link\r\n\r\n                    variant=\"body2\">\r\n                    Forgot password?\r\n                  </Link>\r\n                </NavLink>\r\n\r\n              </Grid>\r\n              <Grid item>\r\n                <NavLink to='/register'>\r\n                  <Link\r\n                    variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </NavLink>\r\n\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../api/api\";\r\n\r\n\r\nlet internalState: RegisterReducerType = {\r\n    isRegistered: false\r\n};\r\n\r\nexport const registerReducer = (state: RegisterReducerType = internalState, action: ActionsType) => {\r\n\r\n    switch (action.type) {\r\n        case \"register/SET-IS-REGISTERED\":\r\n            return {...state, isRegistered: action.value}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst setRegisterAC = (value: boolean) => ({\r\n    type: 'register/SET-IS-REGISTERED', value\r\n})\r\n\r\nexport const RegisterTC = (data: RegisterParamsType) => async (dispatch: Dispatch<ActionsType>) => {\r\n    debugger\r\n    try {\r\n        let response = await authAPI.register(data)\r\n            dispatch(setRegisterAC(true))\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\n//types\r\ntype RegisterReducerType = {\r\n    isRegistered: boolean\r\n};\r\ntype ActionsType = ReturnType<typeof setRegisterAC>\r\ntype ThunkDispatch = Dispatch<ActionsType>\r\n\r\ntype RegisterParamsType = {\r\n    email: string\r\n    password: string\r\n}","import React from 'react';\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, FormControl, FormGroup, FormLabel, Grid, TextField} from \"@material-ui/core\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {RegisterTC} from \"../../../redux/register-reducer\";\r\nimport {AppRootStateType} from \"../../../redux/redux-store\";\r\n\r\nexport const RegisterContainer = () => {\r\n    const dispatch = useDispatch()\r\n    const isRegistered = useSelector<AppRootStateType, boolean>(state => state.register.isRegistered)\r\n    const formik = useFormik({\r\n        validate: (values: any) => {\r\n            if (!values.email) {\r\n                return {\r\n                    email: 'Email is required'\r\n                }\r\n            }\r\n            if (!values.password) {\r\n                return {\r\n                    password: 'Password is required'\r\n                }\r\n            }\r\n        },\r\n        initialValues: {\r\n            email: '',\r\n            password: ''\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(RegisterTC(values))\r\n        }\r\n    })\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <Grid container justify=\"center\">\r\n            <Grid item xs={4}>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <FormControl>\r\n                        <FormLabel>\r\n                            <p>\r\n                                Registration\r\n                            </p>\r\n                        </FormLabel>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label=\"Email\"\r\n                                margin=\"normal\"\r\n                                {...formik.getFieldProps('email')}\r\n                            />\r\n                            {formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n                            <TextField\r\n                                type=\"password\"\r\n                                label=\"Password\"\r\n                                margin=\"normal\"\r\n                                {...formik.getFieldProps('password')}\r\n                            />\r\n                            {formik.errors.password ? <div>{formik.errors.email}</div> : null}\r\n                            <Button type={'submit'} variant={'contained'} color={'primary'}>Register</Button>\r\n                        </FormGroup>\r\n                    </FormControl>\r\n                </form>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n","import {passwordRecovery} from '../api/api';\r\nimport {Dispatch} from 'redux';\r\n\r\nexport type PasswordRecoveryReducerType = {\r\n\terror: string\r\n\tsuccess: boolean\r\n\tloading: boolean\r\n};\r\n\r\nlet initialState: PasswordRecoveryReducerType = {\r\n\terror: '',\r\n\tsuccess: false,\r\n\tloading: false\r\n};\r\n\r\nconst passwordRecoveryReducer = (state: PasswordRecoveryReducerType = initialState,\r\n\taction: ActionTypes) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'pwRecovery/SET_ERROR':\r\n\t\t\treturn {\r\n\t\t\t\t...state, error: action.error\r\n\t\t\t};\r\n\t\tcase 'pwRecovery/SET_SUCCESS':\r\n\t\t\treturn {\r\n\t\t\t\t...state, success: action.success\r\n\t\t\t};\r\n\t\tcase 'pwRecovery/SET_LOADING':\r\n\t\t\treturn {\r\n\t\t\t\t...state, loading: action.loading\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const setErrorAC = (error: string) => ({\r\n\ttype: 'pwRecovery/SET_ERROR',\r\n\terror\r\n} as const);\r\n\r\nexport const setSuccessAC = (success: boolean) => ({\r\n\ttype: 'pwRecovery/SET_SUCCESS',\r\n\tsuccess\r\n} as const);\r\nexport const setLoadingAC = (loading: boolean) => ({\r\n\ttype: 'pwRecovery/SET_LOADING',\r\n\tloading\r\n} as const);\r\n\r\ntype ActionTypes = ReturnType<typeof setErrorAC> | ReturnType<typeof setSuccessAC> | ReturnType<typeof setLoadingAC>\r\n\r\nexport const recoverPasswordTC = (email: string) => (dispatch: Dispatch<ActionTypes>) => {\r\n\tdispatch(setLoadingAC(true))\r\n\tpasswordRecovery.getToken(email).then(\r\n\t\tres => {\r\n\t\t\tdispatch(setSuccessAC(res.data.success));\r\n\t\t\tdispatch(setErrorAC(''));\r\n\t\t\tdispatch(setLoadingAC(false))\r\n\t\t}\r\n\t).catch(error => {\r\n\t\tconst {response} = error;\r\n\t\tconst {request, ...errorObject} = response;\r\n\t\tdispatch(setSuccessAC(false));\r\n\t\tdispatch(setLoadingAC(false))\r\n\t\treturn dispatch(setErrorAC(errorObject.data.error));\r\n\t});\r\n};\r\n\r\nexport default passwordRecoveryReducer;","import React from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst ValidationTextField = withStyles({\r\n\troot: {\r\n\t\t'& input:valid + fieldset': {\r\n\t\t\tborderColor: 'green',\r\n\t\t\tborderWidth: 2,\r\n\t\t},\r\n\t\t'& input:valid:focus + fieldset': {\r\n\t\t\tborderLeftWidth: 6,\r\n\t\t\tpadding: '4px !important',\r\n\t\t},\r\n\t},\r\n})(TextField);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tinput: {\r\n\t\tmarginBottom: '10px'\r\n\t}\r\n}));\r\n\r\ntype PropsType = {\r\n\terror?: boolean | string\r\n\tformik?: any\r\n\ttype?: string\r\n\tlabel?: string\r\n\tvalue?: string\r\n\tonChange?: any\r\n}\r\n\r\nconst InputField = ({error = false, formik, type, label, value, onChange}: PropsType) => {\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<ValidationTextField className={classes.input}\r\n\t\t                     error={error}\r\n\t\t                     helperText={error}\r\n\t\t                     label={label}\r\n\t\t                     fullWidth\r\n\t\t                     required\r\n\t\t                     variant=\"outlined\"\r\n\t\t                     type={type}\r\n\t\t                     {...formik}\r\n\t\t                     onChange={(event) => {\r\n\t\t\t                     onChange( event.currentTarget.value)\r\n\t\t                     }}\r\n\t\t                     value={value}\r\n\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tmarginTop: theme.spacing(8),\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tavatar: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tbackgroundColor: '#2c3258',\r\n\t},\r\n\tform: {\r\n\t\twidth: '100%',\r\n\t\tmarginTop: theme.spacing(3),\r\n\t},\r\n}));\r\n\r\ntype PropsType = {\r\n\tonsubmit: any\r\n\ttitle: string\r\n\tchildren: any\r\n}\r\n\r\nconst FormWrapper = ({onsubmit, children, title}:PropsType) => {\r\n\r\n\tfunction onSubmit() {\r\n\t\tonsubmit()\r\n\t}\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Container component=\"main\" maxWidth=\"xs\">\r\n\t\t\t<CssBaseline/>\r\n\t\t\t<div className={classes.paper}>\r\n\t\t\t\t<Avatar className={classes.avatar}>\r\n\t\t\t\t\t<LockOpenIcon/>\r\n\t\t\t\t</Avatar>\r\n\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\r\n\t\t\t\t\t{title}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<form className={classes.form} onSubmit={onSubmit}>\r\n\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t{children}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default FormWrapper;\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../redux/redux-store';\r\nimport {recoverPasswordTC} from '../../../redux/passwordRecovery-reducer';\r\nimport {useFormik} from 'formik';\r\nimport InputField from '../../../common/InputField';\r\nimport FormButton from '../../../common/FormBtn';\r\nimport FormWrapper from '../../../common/FormWrapper';\r\n\r\nexport const PasswordRecovery = () => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst formik = useFormik({\r\n\t\tvalidateOnBlur: true,\r\n\t\tvalidateOnChange: false,\r\n\t\tvalidate: (values) => {\r\n\t\t\tif (!values.email) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\temail: 'Email is required'\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\temail: 'Invalid email address'\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\tinitialValues: {\r\n\t\t\temail: ''\r\n\t\t},\r\n\t\tonSubmit: values => {\r\n\t\t\tconst {email} = values;\r\n\t\t\tdispatch(recoverPasswordTC(email.trim()));\r\n\t\t},\r\n\t});\r\n\r\n\tconst error = useSelector<AppRootStateType, string>(state => state.pwRecoveryRequest.error);\r\n\tconst success = useSelector<AppRootStateType, boolean>(state => state.pwRecoveryRequest.success);\r\n\tconst loading = useSelector<AppRootStateType, boolean>(state => state.pwRecoveryRequest.loading);\r\n\r\n\treturn (\r\n\t\t<FormWrapper onsubmit={formik.handleSubmit} title={'Reset password'}>\r\n\t\t\t{formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n\t\t\t{error ? <div>{error}</div> : null}\r\n\t\t\t<InputField error={!!formik.errors.email} formik={{...formik.getFieldProps('email')}}\r\n\t\t\t            type={'email'} label={'Enter your email'}/>\r\n\t\t\t<FormButton name={'Send'} disable={loading}/>\r\n\t\t</FormWrapper>\r\n\t);\r\n};\r\n\r\n","import {Dispatch} from 'redux';\r\nimport {passwordRecovery} from '../api/api';\r\n\r\nexport type PssawordCreationReducerType = {\r\n\terror: string\r\n\tsuccess: boolean\r\n\tloading: boolean\r\n};\r\n\r\nlet initialState: PssawordCreationReducerType = {\r\n\terror: '',\r\n\tsuccess: false,\r\n\tloading: false,\r\n};\r\n\r\nconst pssawordCreationReducer = (state: PssawordCreationReducerType = initialState,\r\n\taction: ActionTypes) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'pwCreation/SET_SUCCESS':\r\n\t\t\treturn {\r\n\t\t\t\t...state, success: action.success\r\n\t\t\t};\r\n\t\tcase 'pwCreation/SET_LOADING':\r\n\t\t\treturn {\r\n\t\t\t\t...state, loading: action.loading\r\n\t\t\t};\r\n\t\tcase 'pwCreation/SET_ERROR':\r\n\t\t\treturn {\r\n\t\t\t\t...state, error: action.error\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst setSuccessAC = (success: boolean) => ({\r\n\ttype: 'pwCreation/SET_SUCCESS',\r\n\tsuccess\r\n} as const);\r\nconst setLoadingAC = (loading: boolean) => ({\r\n\ttype: 'pwCreation/SET_LOADING',\r\n\tloading\r\n} as const);\r\nexport const setErrorAC = (error: string) => ({\r\n\ttype: 'pwCreation/SET_ERROR',\r\n\terror\r\n} as const);\r\n\r\ntype ActionTypes =\r\n\tReturnType<typeof setErrorAC>\r\n\t| ReturnType<typeof setSuccessAC>\r\n\t| ReturnType<typeof setLoadingAC>\r\n\r\nexport const setNewPasswordTC = (password: string,\r\n\ttoken: string) => (dispatch: Dispatch<ActionTypes>) => {\r\n\tdispatch(setLoadingAC(true));\r\n\tpasswordRecovery.newPassword(password, token).then(\r\n\t\tres => {\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tdispatch(setSuccessAC(true));\r\n\t\t\t\tdispatch(setErrorAC(''));\r\n\t\t\t\tdispatch(setLoadingAC(false));\r\n\t\t\t}\r\n\t\t}\r\n\t).catch(error => {\r\n\t\tconst {response} = error;\r\n\t\tconst {request, ...errorObject} = response;\r\n\t\tdispatch(setSuccessAC(false));\r\n\t\tdispatch(setLoadingAC(false));\r\n\t\treturn dispatch(setErrorAC(errorObject.data.error));\r\n\t});\r\n};\r\n\r\nexport default pssawordCreationReducer;","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../redux/redux-store';\r\nimport * as Yup from 'yup';\r\nimport {useFormik} from 'formik';\r\nimport {setNewPasswordTC} from '../../../redux/pssawordCreation-reducer';\r\nimport {useParams, Redirect} from 'react-router-dom';\r\nimport InputField from '../../../common/InputField';\r\nimport FormButton from '../../../common/FormBtn';\r\nimport FormWrapper from '../../../common/FormWrapper';\r\n\r\nexport const PasswordCreation = () => {\r\n\r\n\tconst validationSchema = Yup.object().shape({\r\n\t\tpassword: Yup.string().required('This field is required'),\r\n\t\tchangepassword: Yup.string().when('password', {\r\n\t\t\tis: val => (val && val.length > 0 ? true : false),\r\n\t\t\tthen: Yup.string().oneOf(\r\n\t\t\t\t[Yup.ref('password')],\r\n\t\t\t\t'Both password need to be the same'\r\n\t\t\t)\r\n\t\t})\r\n\t});\r\n\r\n\tconst {token} = useParams();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst formik = useFormik({\r\n\t\tvalidateOnBlur: true,\r\n\t\tvalidateOnChange: false,\r\n\t\tinitialValues: {\r\n\t\t\tpassword: '',\r\n\t\t\tchangepassword: ''\r\n\t\t},\r\n\t\tvalidationSchema,\r\n\t\tonSubmit: values => {\r\n\t\t\tconst {password} = values;\r\n\t\t\tdispatch(setNewPasswordTC(password, token));\r\n\t\t}\r\n\t});\r\n\r\n\tconst error = useSelector<AppRootStateType, string>(state => state.passwordUpdate.error);\r\n\tconst success = useSelector<AppRootStateType, boolean>(state => state.passwordUpdate.success);\r\n\tconst loading = useSelector<AppRootStateType, boolean>(state => state.passwordUpdate.loading);\r\n\r\n\tif (success) {\r\n\t\twindow.confirm('Your password has been changed!');\r\n\t\treturn <Redirect to={'/login'}/>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<FormWrapper onsubmit={formik.handleSubmit} title={'Set new password'}>\r\n\t\t\t{formik.errors.password ? <div>{formik.errors.password}</div> : null}\r\n\t\t\t{error ? <div>{error}</div> : null}\r\n\t\t\t<InputField error={!!formik.errors.password}\r\n\t\t\t            formik={{...formik.getFieldProps('password')}}\r\n\t\t\t            type={'password'} label={'Enter new password'}/>\r\n\t\t\t{formik.errors.changepassword ? <div>{formik.errors.changepassword}</div> : null}\r\n\t\t\t<InputField error={!!formik.errors.changepassword}\r\n\t\t\t            formik={{...formik.getFieldProps('changepassword')}}\r\n\t\t\t            type={'password'} label={'Confirm new password'}/>\r\n\t\t\t<FormButton name={'Send'} disable={loading}/>\r\n\t\t</FormWrapper>\r\n\r\n\t);\r\n};\r\n\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../redux/redux-store\";\r\nimport {logoutTC} from \"../../redux/login-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \"./Profile.module.css\";\r\nimport {UsersDataType} from '../../api/api';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: '#e4b61a',\r\n    '&:hover': {\r\n      backgroundColor: '#2c3258'\r\n    }\r\n  },\r\n}));\r\n\r\nexport const Profile = () => {\r\n\r\n  const isAuth = useSelector<AppRootStateType, boolean | undefined>(state => state.login.isAuth);\r\n  const userProfile = useSelector<AppRootStateType, UsersDataType>(state => state.login.userProfile);\r\n\r\n  const {email, name, avatar, publicCardPacksCount, created} = userProfile;\r\n\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles();\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to={'/login'}/>\r\n  }\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logoutTC())\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={s.profileBlock}>\r\n      <div className={s.profileHeader}>\r\n        <div className={'container'}>\r\n          <div>Profile {name}</div>\r\n          <div>Profile email {email}</div>\r\n          <div>Profile avatar {avatar}</div>\r\n          <div>Profile publicCardPacksCount {publicCardPacksCount}</div>\r\n          <div>Profile created {created}</div>\r\n\r\n          <button type=\"submit\" onClick={logoutHandler} className={classes.submit}>Log out</button>\r\n        </div>\r\n        )\r\n      </div>\r\n    </div>\r\n  )\r\n}","import {Dispatch} from 'redux';\r\nimport {mainContent} from '../api/api';\r\nimport {AppRootStateType} from './redux-store';\r\n\r\nexport type PacksReducerType = {\r\n\tcardPacks: PackType[] | [],\r\n\tpage: number,\r\n\tpageCount: number\r\n\tcardPacksTotalCount: number\r\n\tminCardsCount: number\r\n\tmaxCardsCount: number\r\n};\r\n\r\nexport type PackType = {\r\n\tcardsCount: number\r\n\tcreated: string\r\n\tgrade: number\r\n\tmore_id: string\r\n\tname: string\r\n\tpath: string\r\n\tprivate: boolean\r\n\trating: number\r\n\tshots: number\r\n\ttype: string\r\n\tupdated: string\r\n\tuser_id: string\r\n\tuser_name: string\r\n\t__v: number\r\n\t_id: string\r\n}\r\n\r\nlet initialState: PacksReducerType = {\r\n\tcardPacks: [],\r\n\tpage: 0,\r\n\tpageCount: 10,\r\n\tminCardsCount: 0,\r\n\tmaxCardsCount: 20,\r\n\tcardPacksTotalCount: 1\r\n\r\n};\r\n\r\nexport const packsReducer = (state: PacksReducerType = initialState,\r\n\taction: ActionTypes) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'packs/SET_PACKS':\r\n\t\t\treturn {\r\n\t\t\t\t...state, cardPacks: action.cardsPacks,\r\n\t\t\t\tpage: action.page,\r\n\t\t\t\tpageCount: action.pageCount,\r\n\t\t\t\tcardPacksTotalCount: action.cardPacksTotalCount,\r\n\t\t\t\tminCardsCount: action.minCardsCount,\r\n\t\t\t\tmaxCardsCount: action.maxCardsCount\r\n\t\t\t};\r\n\t\tcase 'packs/SET_PAGE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpage: action.page,\r\n\t\t\t\tpageCount: action.pageCount\r\n\r\n\t\t\t};\r\n\t\tcase 'packs/SET_RANGE':\r\n\t\t\treturn {\r\n\t\t\t\t...state, cardPacks: action.cardPacks,\r\n\t\t\t\tpage: action.page,\r\n\t\t\t\tpageCount: action.pageCount,\r\n\t\t\t\tcardPacksTotalCount: action.cardPacksTotalCount,\r\n\t\t\t\tminCardsCount: action.minCardsCount,\r\n\t\t\t\tmaxCardsCount: action.maxCardsCount,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const setPackOfCards = (cardsPacks: PackType[], page:number,\r\n\tpageCount:number, cardPacksTotalCount: number, minCardsCount: number,\r\n\tmaxCardsCount:number ) => ({\r\n\ttype: 'packs/SET_PACKS',\r\n\tcardsPacks,\r\n\tpage,\r\n\tpageCount,\r\n\tcardPacksTotalCount,\r\n\tminCardsCount,\r\n\tmaxCardsCount\r\n} as const);\r\n\r\nexport const setPage = (page: number, pageCount: number) => ({\r\n\ttype: 'packs/SET_PAGE',\r\n\tpage,\r\n\tpageCount\r\n} as const);\r\n\r\nexport const setRange = (data: any,min:number,max:number) => ({\r\n\ttype: 'packs/SET_RANGE',\r\n\tcardPacks: data.cardPacks,\r\n\tpage: data.page,\r\n\tpageCount: data.pageCount,\r\n\tcardPacksTotalCount: data.cardPacksTotalCount,\r\n\tminCardsCount: min,\r\n\tmaxCardsCount: max,\r\n} as const);\r\n\r\ntype ActionTypes =\r\n\tReturnType<typeof setPackOfCards>\r\n\t| ReturnType<typeof setPage>\r\n\t| ReturnType<typeof setRange>\r\n\r\nexport const getPackOfCardsTC = (page: number, row: number) => (dispatch: Dispatch<ActionTypes>,\r\n\tgetState: () => AppRootStateType) => {\r\n\tconst {minCardsCount, maxCardsCount} = getState().packsReducer\r\n\tmainContent.getPacksOfCards(page, row, minCardsCount, maxCardsCount).then(\r\n\t\tres => {\r\n\t\t\tdispatch(setRange(res.data, minCardsCount, maxCardsCount));\r\n\t\t}\r\n\t).catch(error => {\r\n\t\tconsole.log(error.response.data.error)\r\n\t});\r\n};\r\n\r\nexport const changeRange = (min: number, max: number) => (dispatch: Dispatch<ActionTypes>,\r\n\tgetState: () => AppRootStateType) => {\r\n\tconst {page, pageCount} = getState().packsReducer\r\n\tmainContent.getRangedCards(page, pageCount, min, max).then(\r\n\tres => {\r\n\t\tdispatch(setRange(res.data,min,max));\r\n\t}\r\n\t).catch(error => {\r\n\t\tconsole.log(error.response.data.error)\r\n\r\n\t});\r\n};\r\n\r\nexport const addNewPackTC = (name: string) => (dispatch: Dispatch<any>, getState: () => AppRootStateType) => {\r\n\tconst {page, pageCount} = getState().packsReducer\r\n\tmainContent.addNewPack(name).then(\r\n\t\tres => {\r\n\t\t\tdispatch(getPackOfCardsTC(page, pageCount));\r\n\t\t}\r\n\t).catch(error => {\r\n\t\tconsole.log(error.response.data.error)\r\n\t});\r\n};\r\nexport const deletePackTC = (id: string) => (dispatch: Dispatch<any>, getState: () => AppRootStateType) => {\r\n\tconst {page, pageCount} = getState().packsReducer\r\n\tmainContent.deletePack(id).then(\r\n\t\tres => {\r\n\t\t\tdispatch(getPackOfCardsTC(page, pageCount));\r\n\t\t}\r\n\t).catch(error => {\r\n\t\tconsole.log(error.response.data.error)\r\n\t});\r\n};\r\n\r\nexport const updatePackTC = (id: string, name: string) => (dispatch: Dispatch<any>,\r\n\tgetState: () => AppRootStateType) => {\r\n\tconst {page, pageCount} = getState().packsReducer\r\n\tmainContent.updatePack(id, name).then(\r\n\t\tres => {\r\n\t\t\tdispatch(getPackOfCardsTC(page, pageCount));\r\n\t\t}\r\n\t).catch(error => {\r\n\t\tconsole.log(error.response.data.error)\r\n\t});\r\n};\r\n","import React from 'react';\r\nimport {makeStyles, Theme, createStyles, createMuiTheme} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {Button, DialogActions, Typography} from '@material-ui/core';\r\n\r\nconst theme = createMuiTheme();\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\tmodal: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t},\r\n\t\tpaper: {\r\n\t\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\t\tborder: '2px solid #000',\r\n\t\t\tboxShadow: theme.shadows[5],\r\n\t\t\tpadding: theme.spacing(2, 4, 3),\r\n\t\t},\r\n\t\tbutton: {\r\n\t\t\twidth: '250px',\r\n\t\t\talignContent: 'center',\r\n\r\n\t\t},\r\n\t}),\r\n);\r\n\r\ntype PropsType = {\r\n\tisOpen: boolean\r\n\thandleClose: () => void\r\n\ttitle?: string\r\n\tchildren?: any\r\n}\r\n\r\nexport default function ModalWindow({isOpen,handleClose,title,children}:PropsType) {\r\n\tconst classes = useStyles();\r\n\r\n\tfunction onClose() {\r\n\t\thandleClose()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Modal\r\n\t\t\t\taria-labelledby=\"transition-modal-title\"\r\n\t\t\t\taria-describedby=\"transition-modal-description\"\r\n\t\t\t\tclassName={classes.modal}\r\n\t\t\t\topen={isOpen}\r\n\t\t\t\tonClose={onClose}\r\n\t\t\t\tcloseAfterTransition\r\n\t\t\t\tBackdropComponent={Backdrop}\r\n\t\t\t\tBackdropProps={{\r\n\t\t\t\t\ttimeout: 500,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Fade in={isOpen}>\r\n\t\t\t\t\t<div className={classes.paper}>\r\n\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t<Button onClick={() => onClose()} color='primary'>Close</Button>\r\n\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t\t<Typography style={{padding: theme.spacing(2)}} component=\"h3\"\r\n\t\t\t\t\t\t            variant=\"h3\">\r\n\t\t\t\t\t\t\t{title}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t{children}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Fade>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { changeRange } from '../redux/packs-reducer';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\twidth: 150,\r\n\t},\r\n});\r\n\r\ntype PropsType = {\r\n\tminRange: number\r\n\tmaxRange: number\r\n}\r\n\r\nexport default function RangeSlider({minRange,maxRange}:PropsType) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState<number[]>([minRange, maxRange]);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleChange = (event: any, newValue: number | number[] | any) => {\r\n\t\tif (newValue) {\r\n\t\t\tdispatch(changeRange(newValue[0],newValue[1]))\r\n\t\t}\r\n\t\tconsole.log(newValue)\r\n\t\tsetValue(newValue as number[]);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Typography id=\"range-slider\" gutterBottom>\r\n\t\t\t\tNumber of cards\r\n\t\t\t</Typography>\r\n\t\t\t<Slider\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tmin={minRange}\r\n\t\t\t\tstep={5}\r\n\t\t\t\tmax={maxRange}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\taria-labelledby=\"range-slider\"\r\n\t\t\t\tvalueLabelDisplay=\"on\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}","import React from 'react';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport {createMuiTheme, makeStyles} from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme();\r\ntheme.spacing(2);\r\nconst useStyles = makeStyles({\r\n\tpagination: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t\tmarginTop: '20px'\r\n\t}\r\n});\r\n\r\ntype PropsType = {\r\n\tcount: number\r\n\tpage: number\r\n\trowsPerPageOptions: Array<number>\r\n\tonChangePage: (value: number) => void\r\n\tonChangeRowsPerPage: (value:number) => void\r\n\trowsPerPage: number\r\n}\r\n\r\nconst Pagination = ({\r\n\tcount,\r\n\tpage,\r\n\trowsPerPageOptions,\r\n\tonChangePage,\r\n\trowsPerPage,\r\n\tonChangeRowsPerPage\r\n}: PropsType) => {\r\n\r\n\tconst handleChangePage = (event: React.MouseEvent<HTMLButtonElement> | null,\r\n\t\tnewPage: number) => {\r\n\t\tonChangePage(newPage)\r\n\t};\r\n\r\n\tconst handleChangeRowsPerPage = (\r\n\t\tevent: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n\t) => {\r\n\t\tonChangeRowsPerPage(+event.target.value);\r\n\t};\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<TablePagination\r\n\t\t\t\tclassName={classes.pagination}\r\n\t\t\t\tcomponent=\"div\"\r\n\t\t\t\tcount={count}\r\n\t\t\t\tpage={page}\r\n\t\t\t\trowsPerPageOptions={rowsPerPageOptions}\r\n\t\t\t\tonChangePage={handleChangePage}\r\n\t\t\t\trowsPerPage={rowsPerPage}\r\n\t\t\t\tonChangeRowsPerPage={handleChangeRowsPerPage}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Pagination;\r\n","import React  from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {createMuiTheme, makeStyles} from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme();\r\ntheme.spacing(2);\r\n\r\nconst useStyles = makeStyles({\r\n\ttable: {\r\n\t\tminWidth: 650,\r\n\t},\r\n\theading: {\r\n\t\tfontWeight: 'bold'\r\n\t},\r\n\r\n});\r\n\r\ntype DataType = {\r\n\tname: string\r\n\talign: any\r\n}\r\n\r\ntype PropsType = {\r\n\theading: Array<DataType>\r\n\tchildren?: any\r\n}\r\n\r\nconst TableData = ({heading,children}: PropsType) => {\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Table className={classes.table} aria-label=\"simple table\">\r\n\t\t\t<TableHead>\r\n\t\t\t\t<TableRow>\r\n\t\t\t\t\t{heading.map(elem => <TableCell className={classes.heading}\r\n\t\t\t\t\t                                align={elem.align}>{elem.name}</TableCell>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</TableRow>\r\n\t\t\t</TableHead>\r\n\t\t\t<TableBody>\r\n\t\t\t\t{children}\r\n\t\t\t</TableBody>\r\n\t\t</Table>\r\n\t);\r\n};\r\n\r\nexport default TableData;\r\n\r\n","import {Dispatch} from 'redux';\r\nimport {mainContent} from '../api/api';\r\nimport {AppRootStateType} from './redux-store';\r\n\r\nexport type StateType = {\r\n\tcards: CardType[],\r\n\tcardsTotalCount: number\r\n\tmaxGrade: number\r\n\tminGrade: number\r\n\tpage: number\r\n\tpageCount: number\r\n\tid: string\r\n};\r\n\r\nexport type CardType = {\r\n\tanswer: string\r\n\tquestion: string\r\n\tcardsPack_id: string\r\n\tgrade: number\r\n\trating: number\r\n\tshots: number\r\n\ttype: string\r\n\tcreated: string\r\n\tupdated: string\r\n\t__v: number\r\n\t_id: string\r\n}\r\n\r\nlet initialState: StateType = {\r\n\tcards: [],\r\n\tcardsTotalCount: 0,\r\n\tmaxGrade: 0,\r\n\tminGrade: 0,\r\n\tpage: 1,\r\n\tpageCount: 4,\r\n\tid: ''\r\n};\r\n\r\nexport const cardsReducer = (state: StateType = initialState,\r\n\taction: ActionTypes) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'cards/SET_CARDS':\r\n\t\t\treturn {\r\n\t\t\t\t...state, ...action.data, id: action.id\r\n\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst setCards = (data: StateType, id:string) => ({\r\n\ttype: 'cards/SET_CARDS',\r\n\tdata,\r\n\tid\r\n})\r\n\r\ntype ActionTypes =\r\n\tReturnType<typeof setCards>\r\n\r\nexport const getCardsTC = (id: string) => (dispatch: Dispatch<any>,getState: () => AppRootStateType) => {\r\n\tconst {page, pageCount} = getState().cardsReducer;\r\n\tmainContent.getCards(id, page, pageCount).then(\r\n\t\tres => {\r\n\t\t\tdispatch(setCards(res.data, id));\r\n\t\t}\r\n\t).catch(error => {\r\n\t\tconsole.log(error.response.data.error)\r\n\t});\r\n};\r\n\r\nexport const getNewPageTC = (page:number,row:number) => (dispatch: Dispatch<any>,getState: () => AppRootStateType) => {\r\n\tconst {id} = getState().cardsReducer;\r\n\tmainContent.getCards(id, page, row).then(\r\n\t\tres => {\r\n\t\t\tdispatch(setCards(res.data, id));\r\n\t\t}\r\n\t).catch(error => {\r\n\t\tconsole.log(error.response.data.error)\r\n\t});\r\n};\r\n\r\nexport const addNewCardTC = (question:string,answer:string) => (dispatch: Dispatch<any>,getState: () => AppRootStateType) => {\r\n\tconst {id} = getState().cardsReducer;\r\n\tmainContent.addNewCard(id, question, answer).then(\r\n\t\tres => {\r\n\t\t\tdebugger\r\n\t\t\tdispatch(getCardsTC(id));\r\n\r\n\t\t}\r\n\t).catch(error => {\r\n\t\tdebugger\r\n\t\tconsole.log(error.response.data.error)\r\n\t});\r\n};\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {createMuiTheme, makeStyles} from '@material-ui/core/styles';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../redux/redux-store';\r\nimport {\r\n\taddNewPackTC,\r\n\tdeletePackTC,\r\n\tgetPackOfCardsTC,\r\n\tPackType,\r\n\tupdatePackTC\r\n} from '../../../redux/packs-reducer';\r\nimport {Typography, Grid, Button, IconButton} from '@material-ui/core';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport ModalWindow from '../../../common/Modal';\r\nimport InputField from '../../../common/InputField';\r\nimport FormButton from '../../../common/FormBtn';\r\nimport RangeSlider from '../../../common/RangeSlider';\r\nimport Pagination from '../../../common/Pagination';\r\nimport TableData from '../../../common/Table';\r\nimport { Redirect } from 'react-router'\r\nimport { getCardsTC } from '../../../redux/cards-reducer';\r\nimport { useHistory } from 'react-router-dom';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\n\r\n\r\nconst theme = createMuiTheme();\r\ntheme.spacing(2);\r\n\r\nconst useStyles = makeStyles({\r\n\tpadding: {\r\n\t\tpadding: 0\r\n\t},\r\n\tbutton: {\r\n\t\twidth: '250px',\r\n\t\talignContent: 'center',\r\n\t},\r\n\tmargin: {\r\n\t\tmarginLeft: theme.spacing(5),\r\n\t},\r\n\tdistance: {\r\n\t\twidth: '150px'\r\n\t},\r\n});\r\n\r\nconst Packs = React.memo(function () {\r\n\r\n\tlet history = useHistory();\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tconst [localPage, setlocalPage] = useState(1);\r\n\tconst [localRow, setlocalRow] = useState(4);\r\n\tconst [newName, setNewName] = useState('');\r\n\tconst [isOpen, setIsOpen] = useState(false);\r\n\r\n\tconst onChangePage = (newPage: number) => {\r\n\t\tsetlocalPage(newPage + 1);\r\n\t\tdispatch(getPackOfCardsTC(newPage + 1, localRow));\r\n\t};\r\n\tconst onChangeRowLength = (row: number) => {\r\n\t\tsetlocalRow(row);\r\n\t\tdispatch(getPackOfCardsTC(localPage, row));\r\n\t};\r\n\r\n\tconst state = useSelector<AppRootStateType, any>(state => state.packsReducer);\r\n\tconst {cardPacks, page, pageCount, cardPacksTotalCount} = state;\r\n\tconst isAuth = useSelector<AppRootStateType, boolean | any>(state => state.login.isAuth);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getPackOfCardsTC(localPage, localRow));\r\n\t}, [pageCount, page]);\r\n\r\n\tconst onAddNewPackHandler = () => {\r\n\t\tdispatch(addNewPackTC(newName));\r\n\t\tsetIsOpen(false);\r\n\t};\r\n\r\n\tconst onDeleteHandler = (id: string) => {\r\n\t\tdispatch(deletePackTC(id));\r\n\t};\r\n\r\n\tconst onOpenHandler = (id: string) => {\r\n\t\thistory.push(\"/сards\");\r\n\t\tdispatch(getCardsTC(id))\r\n\t\tconsole.log(id)\r\n\t};\r\n\r\n\tconst onUpdateHandler = (id: string) => {\r\n\t\tdispatch(updatePackTC(id, 'asd'));\r\n\t};\r\n\r\n\tconst handleDialogOpen = () => {\r\n\t\tsetIsOpen(true);\r\n\t};\r\n\r\n\tconst handleDialogClose = () => {\r\n\t\tsetIsOpen(false);\r\n\t};\r\n\r\n\tconst tableCell = [\r\n\t\t{name: 'Name', align: 'inherit'},\r\n\t\t{name: 'Card Count', align: 'center'},\r\n\t\t{name: 'Open', align: 'right'},\r\n\t\t{name: 'Delete', align: 'center'},\r\n\t\t{name: 'Modify', align: 'left'},\r\n\t\t{name: 'Updated', align: 'right'},\r\n\t];\r\n//\r\n\r\n\tconst randomColor = useCallback(() => {\r\n\t\tlet color = 'rgb(' + Math.round(Math.random() * 255)\r\n\t\t\t+ ',' + Math.round(Math.random() * 255) + ',' + Math.round(Math.random() * 255) + ')';\r\n\t\treturn color;\r\n\t}, []);\r\n\r\n\tif (isAuth) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<TableContainer component={Paper}>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tstyle={{marginTop: theme.spacing(2)}}\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\t\tjustify=\"space-between\"\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Typography className={classes.margin} variant=\"h3\">Packs</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<RangeSlider maxRange={20} minRange={0}/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={() => handleDialogOpen()}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\t\t\tstartIcon={<AddBoxIcon/>}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tADD PACK\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<TableData  heading={tableCell}>\r\n\t\t\t\t\t\t{cardPacks.map((row:PackType) => (\r\n\t\t\t\t\t\t\t<TableRow key={row._id}>\r\n\t\t\t\t\t\t\t\t<TableCell className={classes.distance} component=\"th\" scope=\"row\">\r\n\t\t\t\t\t\t\t\t\t{row.name}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"center\">{row.cardsCount}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">\r\n\t\t\t\t\t\t\t\t\t<IconButton style={{color: randomColor()}}\r\n\t\t\t\t\t\t\t\t\t            onClick={() => onOpenHandler(row._id)}\r\n\t\t\t\t\t\t\t\t\t            className={classes.padding} aria-label=\"add\">\r\n\t\t\t\t\t\t\t\t\t\t<AddBoxIcon fontSize=\"small\"/>\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"center\">\r\n\t\t\t\t\t\t\t\t\t<IconButton style={{color: randomColor()}}\r\n\t\t\t\t\t\t\t\t\t            className={classes.padding} aria-label=\"delete\"\r\n\t\t\t\t\t\t\t\t\t            onClick={() => onDeleteHandler(row._id)}>\r\n\t\t\t\t\t\t\t\t\t\t<DeleteIcon fontSize=\"small\"/>\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">\r\n\t\t\t\t\t\t\t\t\t<IconButton style={{color: randomColor()}}\r\n\t\t\t\t\t\t\t\t\t            onClick={() => onUpdateHandler(row._id)}\r\n\t\t\t\t\t\t\t\t\t            className={classes.padding} aria-label=\"modify\">\r\n\t\t\t\t\t\t\t\t\t\t<AutorenewIcon fontSize=\"small\"/>\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.updated.slice(0, -14)}</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</TableData>\r\n\t\t\t\t</TableContainer>\r\n\t\t\t\t<Pagination count={cardPacksTotalCount} page={page - 1}\r\n\t\t\t\t            rowsPerPageOptions={[4, 10, 20]} onChangePage={onChangePage}\r\n\t\t\t\t            rowsPerPage={pageCount} onChangeRowsPerPage={onChangeRowLength}/>\r\n\t\t\t\t<ModalWindow handleClose={handleDialogClose} isOpen={isOpen} title={'Add' +\r\n\t\t\t\t' new pack'}>\r\n\t\t\t\t\t<form onSubmit={onAddNewPackHandler}>\r\n\t\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t\t<InputField value={newName}\r\n\t\t\t\t\t\t\t            type={'text'} label={'Set new name'}\r\n\t\t\t\t\t\t\t            onChange={setNewName}/>\r\n\t\t\t\t\t\t\t<FormButton name={'Send'}/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</ModalWindow>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\treturn <Redirect to={'/login'}/>\r\n\r\n});\r\nexport default Packs;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tmarginTop: theme.spacing(8),\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tavatar: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t},\r\n\tform: {\r\n\t\twidth: '100%', // Fix IE 11 issue.\r\n\t\tmarginTop: theme.spacing(3),\r\n\t},\r\n\tsubmit: {\r\n\t\tmargin: theme.spacing(3, 0, 2),\r\n\t},\r\n}));\r\n\r\n const WrongPage = () => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Container component=\"main\" maxWidth=\"xs\">\r\n\t\t\t<CssBaseline />\r\n\t\t\t<div className={classes.paper}>\r\n\t\t\t\t<Typography component=\"h1\" variant=\"h1\">\r\n\t\t\t\t\t404\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography component=\"h1\" variant=\"h4\">\r\n\t\t\t\t\tThis page doesnt exist\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<NavLink to={'/profile'}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tclassName={classes.submit}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tGo back\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</NavLink>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default WrongPage\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Button, Grid, Typography} from '@material-ui/core';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport ModalWindow from '../../../common/Modal';\r\nimport InputField from '../../../common/InputField';\r\nimport FormButton from '../../../common/FormBtn';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport {createMuiTheme, makeStyles} from '@material-ui/core/styles';\r\nimport TableData from '../../../common/Table';\r\nimport {CardType, getNewPageTC, addNewCardTC} from '../../../redux/cards-reducer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../redux/redux-store';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Pagination from '../../../common/Pagination';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst theme = createMuiTheme();\r\ntheme.spacing(2);\r\n\r\nconst useStyles = makeStyles({\r\n\tpadding: {\r\n\t\tpadding: 0\r\n\t},\r\n\tbutton: {\r\n\t\twidth: '250px',\r\n\t\talignContent: 'center',\r\n\t},\r\n\tmargin: {\r\n\t\tmarginLeft: theme.spacing(5),\r\n\t},\r\n\tdistance: {\r\n\t\twidth: '150px'\r\n\t},\r\n});\r\n\r\nconst Cards = () => {\r\n\tconst classes = useStyles();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst state = useSelector<AppRootStateType, any>(state => state.cardsReducer);\r\n\tconst isAuth = useSelector<AppRootStateType, boolean | any>(state => state.login.isAuth);\r\n\tconst {cards, cardsTotalCount, page, pageCount,id} = state;\r\n\r\n\tconst [localPage, setlocalPage] = useState(1);\r\n\tconst [localRow, setlocalRow] = useState(4);\r\n\tconst [question, setQuestion] = useState('');\r\n\tconst [answer, setAnswer] = useState('');\r\n\tconst [isOpen, setIsOpen] = useState(false);\r\n\r\n\r\n\tconst handleDialogOpen = () => {\r\n\t\tsetIsOpen(true);\r\n\t};\r\n\r\n\tconst handleDialogClose = () => {\r\n\t\tsetIsOpen(false);\r\n\t};\r\n\r\n\tconst onAddNewPackHandler = () => {\r\n\t\tdispatch(addNewCardTC(question, answer));\r\n\t\tsetIsOpen(false);\r\n\t};\r\n\r\n\tconst onChangePage = (newPage: number) => {\r\n\t\tsetlocalPage(newPage + 1);\r\n\t\tdispatch(getNewPageTC(newPage + 1, localRow))\r\n\t};\r\n\tconst onChangeRowLength = (row: number) => {\r\n\t\tsetlocalRow(row);\r\n\t\tdispatch(getNewPageTC(localPage, row));\r\n\t};\r\n\r\n\tconst tableCell = [\r\n\t\t{name: 'Question', align: 'inherit'},\r\n\t\t{name: 'Answer', align: 'center'},\r\n\t\t{name: 'Grade', align: 'center'},\r\n\t\t{name: 'Updated', align: 'right'},\r\n\t];\r\n\r\n\tif (isAuth) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<TableContainer component={Paper}>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tstyle={{marginTop: theme.spacing(2)}}\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\t\tjustify=\"space-between\"\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<Typography className={classes.margin} variant=\"h3\">Cards</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={() => handleDialogOpen()}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\t\t\tstartIcon={<AddBoxIcon/>}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tADD CARD\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<TableData  heading={tableCell}>\r\n\t\t\t\t\t\t{cards.map((row:CardType) => (\r\n\t\t\t\t\t\t\t<TableRow key={row._id}>\r\n\t\t\t\t\t\t\t\t<TableCell className={classes.distance} component=\"th\" scope=\"row\">\r\n\t\t\t\t\t\t\t\t\t{row.question}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"center\">{row.answer}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"center\">{row.grade}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.updated.slice(0, -14)}</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</TableData>\r\n\t\t\t\t</TableContainer>\r\n\t\t\t\t<Pagination count={cardsTotalCount} page={page - 1}\r\n\t\t\t\t            rowsPerPageOptions={[4, 10, 20]} onChangePage={onChangePage}\r\n\t\t\t\t            rowsPerPage={pageCount} onChangeRowsPerPage={onChangeRowLength}/>\r\n\t\t\t\t<ModalWindow handleClose={() => handleDialogClose()} isOpen={isOpen} title={'Add' +\r\n\t\t\t\t' new card'}>\r\n\t\t\t\t\t<form onSubmit={() => onAddNewPackHandler()}>\r\n\t\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t\t<InputField value={question}\r\n\t\t\t\t\t\t\t            type={'text'} label={'Enter question'}\r\n\t\t\t\t\t\t\t            onChange={setQuestion}/>\r\n\t\t\t\t            <InputField value={answer}\r\n\t\t\t\t\t\t\t            type={'text'} label={'Enter answer'}\r\n\t\t\t\t\t\t\t            onChange={setAnswer}/>\r\n\t\t\t\t\t\t\t<FormButton name={'Send'}/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</ModalWindow>\r\n\t\t\t</div>\r\n\r\n\t\t)\r\n\t} \treturn <Redirect to={'/login'}/>\r\n\r\n\r\n\t\t;\r\n};\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {LoginPage} from './components/auth/Login/LoginPage';\r\nimport {RegisterContainer} from './components/auth/Register/RegisterContainer';\r\nimport {PasswordRecovery} from './components/auth/PasswordRecovery/PasswordRecovery';\r\nimport {PasswordCreation} from './components/auth/PasswordCreation/PasswordCreation';\r\nimport {Profile} from \"./components/Profile/Profile\";\r\nimport Packs from './components/Main-content/Packs/Packs';\r\nimport WrongPage from './components/WrongPage';\r\nimport Cards from './components/Main-content/Cards/Cards';\r\n\r\nfunction App() {\r\n\r\n\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t<header>\r\n\t\t\t\t<Navbar/>\r\n\t\t\t</header>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path={'/profile/:userId?'}\r\n                   render={() => <Profile/>}/>\r\n\t\t\t\t\t<Route path={'/login'}\r\n\t\t\t\t\t       render={() => <LoginPage/>}/>\r\n\t\t\t\t\t<Route path={'/register'}\r\n\t\t\t\t\t       render={() => <RegisterContainer/>}/>\r\n\t\t\t\t\t<Route path={'/passwordRecovery'}\r\n\t\t\t\t\t       render={() => <PasswordRecovery/>}/>\r\n\t\t\t\t\t<Route path={'/set-new-password/:token?'}\r\n\t\t\t\t\t       render={() => <PasswordCreation/>}/>\r\n\t\t\t\t\t<Route path={'/packs'}\r\n\t\t\t\t\t       render={() => <Packs/>}/>\r\n\t\t\t\t    <Route path={'/сards'}\r\n\t\t\t\t\t       render={() => <Cards/>}/>\r\n\t\t\t\t\t<Route path={'*'}\r\n\t\t\t\t\t       render={() => <WrongPage/>}/>\r\n\t\t\t\t</Switch>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { Dispatch } from \"redux\"\r\nimport {authAPI} from \"../api/api\";\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    isInitialized: false,\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType  = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        // case 'APP/SET-STATUS':\r\n        //     return {...state, status: action.status}\r\n        // case 'APP/SET-ERROR':\r\n        //     return {...state, error: action.error}\r\n        case \"APP/INITIALIZE-APP\":\r\n            return {...state, isInitialized: action.isInitialized}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n\r\nexport const initializeAppAC = (isInitialized: boolean) => ({type: 'APP/INITIALIZE-APP', isInitialized} as const)\r\n\r\n\r\nexport const initializeAppTC = () => (dispatch: Dispatch) => {\r\n    authAPI.me().then(res => {\r\n        try {\r\n            dispatch(initializeAppAC(true))\r\n        } catch (e) {\r\n            dispatch(initializeAppAC(true))\r\n            console.log(e.response.data.error)\r\n        }\r\n\r\n    })\r\n}\r\n\r\nexport type InitialStateType = {\r\n    isInitialized: boolean\r\n}\r\n\r\nexport type InitializeAppActionType = ReturnType<typeof initializeAppAC>\r\n\r\n\r\ntype ActionsType = | InitializeAppActionType\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {registerReducer} from \"./register-reducer\";\r\nimport passwordRecoveryReducer from './passwordRecovery-reducer';\r\nimport pssawordCreationReducer from './pssawordCreation-reducer';\r\nimport loginReducer from './login-reducer';\r\nimport {packsReducer} from \"./packs-reducer\";\r\nimport {cardsReducer} from \"./cards-reducer\";\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n  register: registerReducer,\r\n  pwRecoveryRequest: passwordRecoveryReducer,\r\n  passwordUpdate: pssawordCreationReducer,\r\n  login: loginReducer,\r\n  packsReducer,\r\n  cardsReducer,\r\n  app: appReducer\r\n\r\n});\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport App from './App';\r\nimport {store} from './redux/redux-store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}